<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title><![CDATA[Mr-wang的博客 | 运维笔记]]></title>
  <subtitle><![CDATA[运维笔记]]></subtitle>
  <link href="/atom.xml" rel="self"/>
  <link href="http://www.mr-wang.cn/"/>
  <updated>2015-10-15T12:56:38.702Z</updated>
  <id>http://www.mr-wang.cn/</id>
  
  <author>
    <name><![CDATA[Mr-wang]]></name>
    <email><![CDATA[281704862@qq.com]]></email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title><![CDATA[阅读书单]]></title>
    <link href="http://www.mr-wang.cn/2015/07/16/book-list/"/>
    <id>http://www.mr-wang.cn/2015/07/16/book-list/</id>
    <published>2015-07-16T13:26:27.000Z</published>
    <updated>2015-10-15T12:56:38.702Z</updated>
    <content type="html"><![CDATA[<ul>
<li><strong>2015.07阅读清单</strong><ul>
<li>[x] Linux系统命令及Shell脚本实践指南（纸质）</li>
<li>[ ] 高性能Linux服务器构建实战——系统安全、故障排查、自动化运维与集群架构（纸质）</li>
<li>[ ] 构建高性能Web站点（纸质）</li>
<li>[ ] 深入理解Nginx（纸质）</li>
<li>[ ] 这才是马云（电子书）</li>
</ul>
</li>
</ul>
]]></content>
    <summary type="html">
    <![CDATA[<ul>
<li><strong>2015.07阅读清单</strong><ul>
<li>[x] Linux系统命令及Shell脚本实践指南（纸质）</li>
<li>[ ] 高性能Linux服务器构建实战——系统安全、故障排查、自动化运维与集群架构（纸质）</li>
<li>]]>
    </summary>
    
      <category term="阅读,书单" scheme="http://www.mr-wang.cn/tags/%E9%98%85%E8%AF%BB-%E4%B9%A6%E5%8D%95/"/>
    
      <category term="读书" scheme="http://www.mr-wang.cn/categories/%E8%AF%BB%E4%B9%A6/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Nginx+Tomcat+Memcached集群]]></title>
    <link href="http://www.mr-wang.cn/2015/07/16/Nginx-Tomcat-Memcached-Cluster/"/>
    <id>http://www.mr-wang.cn/2015/07/16/Nginx-Tomcat-Memcached-Cluster/</id>
    <published>2015-07-16T12:26:27.000Z</published>
    <updated>2015-10-15T12:57:48.218Z</updated>
    <content type="html"><![CDATA[<h2 id="部署环境">部署环境</h2><p>系统：Centos<br>软件及依赖包：<br>Nginx:<br>nginx-1.6.2.tar.gz<br>(<a href="http://nginx.org/download/nginx-1.6.2.tar.gz" target="_blank" rel="external">http://nginx.org/download/nginx-1.6.2.tar.gz</a>)<br>pcre-8.36.tar.gz (ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.36.tar.gz)<br>zlib-1.2.8.tar.gz(<a href="http://zlib.net/zlib-1.2.8.tar.gz" target="_blank" rel="external">http://zlib.net/zlib-1.2.8.tar.gz</a>)</p>
<p>memcached：<br>memcached-1.4.22.tar.gz(<a href="http://memcached.org/files/memcached-1.4.22.tar.gz" target="_blank" rel="external">http://memcached.org/files/memcached-1.4.22.tar.gz</a>)<br>libevent-2.0.22-stable.tar.gz(<a href="http://libevent.org/" target="_blank" rel="external">http://libevent.org/</a>)</p>
<p>memcached-session-manager：<br><a href="http://repo1.maven.org/maven2/de/javakaffee/msm/" target="_blank" rel="external">下载地址</a></p>
<p>Tomcat：<br>apache-tomcat-7.0.59.tar.gz (<a href="http://mirrors.cnnic.cn/apache/tomcat/tomcat-7/v7.0.59/bin/apache-tomcat-7.0.59.tar.gz" target="_blank" rel="external">http://mirrors.cnnic.cn/apache/tomcat/tomcat-7/v7.0.59/bin/apache-tomcat-7.0.59.tar.gz</a>)<br>jdk-7u72-linux-x64.tar.gz</p>
<p>jar包：<br>我采用的是截止目前最新的版本，其中序列化方式是可选的。<br>序列化方式使用kryo时,jar包：<a href="http://wy-uploads.qiniudn.com/MSM_kryo.zip" target="_blank" rel="external">下载地址</a><br><img src="http://wy-uploads.qiniudn.com/MSM_1.png" alt="此处输入图片的描述"></p>
<p>序列化方式使用javolution时,jar包：<a href="http://wy-uploads.qiniudn.com/MSM_javolution.zip" target="_blank" rel="external">下载地址</a><br><img src="http://wy-uploads.qiniudn.com/MSM_2.png" alt="此处输入图片的描述"></p>
<p>了解到kryo序列化方式效率最高。</p>
<p>相关序列方式，所需不同jar包，可参考<a href="https://code.google.com/p/memcached-session-manager/wiki/SetupAndConfiguration" target="_blank" rel="external">官方文档</a></p>
<a id="more"></a>
<h2 id="Nginx安装">Nginx安装</h2><h3 id="安装gcc-c++">安装gcc-c++</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc-c++</span><br></pre></td></tr></table></figure>
<h3 id="安装pcre库">安装pcre库</h3><p>pcre库是为了使nginx支持http rewrite模块</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src/&#10;wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.36.tar.gz&#10;tar -xzvf pcre-8.36.tar.gz&#10;cd pcre-8.36&#10;./configure&#10;make&#10;make install</span><br></pre></td></tr></table></figure>
<h3 id="安装zlib库">安装zlib库</h3><p>zlib库是为了使nginx支持gzip压缩</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/src&#10;wget http://zlib.net/zlib-1.2.8.tar.gz&#10;tar -xzvf zlib-1.2.8.tar.gz&#10;cd zlib-1.2.8&#10;./configure&#10;make&#10;make install</span><br></pre></td></tr></table></figure>
<h3 id="安装Nginx">安装Nginx</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/&#10;wget http://nginx.org/download/nginx-1.6.2.tar.gz&#10;tar -zxvf nginx-1.6.2.tar.gz&#10;cd nginx-1.6.2&#10;./configure --prefix=/usr/local/nginx --with-pcre=/usr/local/src/pcre-8.36 --with-zlib=/usr/local/src/zlib-1.2.8&#10;make&#10;make install</span><br></pre></td></tr></table></figure>
<h3 id="配置nginx-conf">配置nginx.conf</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#10;#user  nobody;&#10;worker_processes  1;&#10;&#10;#error_log  logs/error.log;&#10;#error_log  logs/error.log  notice;&#10;#error_log  logs/error.log  info;&#10;&#10;#pid        logs/nginx.pid;&#10;&#10;&#10;events &#123;&#10;    worker_connections  1024;&#10;&#125;&#10;&#10;&#10;http &#123;&#10;    include       mime.types;&#10;    default_type  application/octet-stream;&#10;&#10;    #log_format  main  &#39;$remote_addr - $remote_user [$time_local] &#34;$request&#34; &#39;&#10;    #                  &#39;$status $body_bytes_sent &#34;$http_referer&#34; &#39;&#10;    #                  &#39;&#34;$http_user_agent&#34; &#34;$http_x_forwarded_for&#34;&#39;;&#10;&#10;    #access_log  logs/access.log  main;&#10;&#10;    sendfile        on;&#10;    #tcp_nopush     on;&#10;&#10;    #keepalive_timeout  0;&#10;    keepalive_timeout  65;&#10;&#10;    gzip  on;&#10;&#10;&#10;    #&#37197;&#32622;&#21518;&#31471;&#26381;&#21153;&#22120;&#32676;&#32452;&#20449;&#24687;&#10;    upstream web_server &#123;&#10;&#9;server&#9;localhost:8080;&#10;&#9;server&#9;localhost:8081;&#10;    &#125;&#10;&#10;    server &#123;&#10;        listen       80;&#10;        server_name  localhost;&#10;&#10;        charset utf-8;&#10;&#10;        #access_log  logs/host.access.log  main;&#10;&#10;        location / &#123;&#10;            root              html;&#10;            index             index.html index.htm;&#10;&#9;        #&#20195;&#29702;&#35774;&#32622;&#10;&#9;        proxy_pass        http://web_server;&#10;&#9;        proxy_set_header  X-Real-IP  $remote_addr;&#10;            client_max_body_size 100m;&#10;        &#125;&#10;&#10;        #error_page  404              /404.html;&#10;&#10;        # redirect server error pages to the static page /50x.html&#10;        #&#10;        error_page   500 502 503 504  /50x.html;&#10;        location = /50x.html &#123;&#10;            root   html;&#10;        &#125;&#10;&#125;</span><br></pre></td></tr></table></figure>
<h2 id="安装memcached">安装memcached</h2><p>先安装libevent-2.0.22-stable.tar.gz依赖包</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf libevent-2.0.22-stable.tar.gz &#10;cd libevent-2.0.22-stable &#10;./configure --prefix=/usr/local/libevent-2.0.22&#10;make&#10;make install</span><br></pre></td></tr></table></figure>
<p>再安装memcached-1.4.22.tar.gz<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar zxvf memcached-1.4.22.tar.gz &#10;cd memcached-1.4.22 &#10;./configure --prefix=/usr/local/memcached-1.4.22 --with-libevent=/usr/local/libevent-2.0.22/ &#10;make &#10;make install&#10;&#10;#&#20197;&#23432;&#25252;&#36827;&#31243;&#30340;&#26041;&#24335;&#21551;&#21160;&#65292;&#30417;&#21548;&#20110; 127.0.0.1 &#30340;11211&#31471;&#21475;&#65292;&#20351;&#29992;root&#29992;&#25143;&#65292;&#26368;&#22823;&#20351;&#29992;512M&#20869;&#23384;&#65292;&#26085;&#24535;&#36755;&#20986;&#21040;/tmp/memcached.log&#19979;&#10;/usr/local/memcached-1.4.22/bin/memcached -d -m 512 -l 127.0.0.1 -p 11211 -u root -vv &#62;&#62; /tmp/memcached.log 2&#62;&#38;1&#10;#&#21551;&#21160;&#21518;&#65292;&#21487;&#20197;telnet&#19978;&#21435;&#30475;&#19979;&#29366;&#24577;&#10;telnet 127.0.0.1 11211&#10;&#10;stats</span><br></pre></td></tr></table></figure></p>
<h2 id="安装tomcat">安装tomcat</h2><h3 id="安装JDK_环境">安装JDK 环境</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#&#26597;&#35810;&#26159;&#21542;&#23433;&#35013;java&#10;rpm -qa | grep java&#10;#&#21368;&#36733;openjdk&#10;rpm -e java-1.6.0-openjdk-1.6.0.0-1.45.1.11.1.el6.x86_64&#10;rpm -e tzdata-java-2012c-1.el6.noarch&#10;&#10;#&#23433;&#35013;java&#10;mkdir /usr/java&#10;cd /usr/java&#10;wget http://.../jdk-7u72-linux-x64.tar.gz&#10;tar -xzvf jdk-7u72-linux-x64.tar.gz&#10;&#10;#&#20462;&#25913;&#31995;&#32479;&#29615;&#22659;&#21464;&#37327;&#25991;&#20214;&#10;vi /etc/profile&#10;&#10;#&#28155;&#21152;&#22914;&#19979;&#20869;&#23481;&#10;#Set java JDK&#10;JAVA_HOME=/usr/local/jdk1.7.0_72&#10;JRE_HOME=/usr/local/jdk1.7.0_72/jre&#10;PATH=$PATH:$JAVA_HOME/bin:$JRE_home/bin&#10;CLASSPATH=$JAVA_HOME/lib/tools.jar:$JAVA_HOME/lib/dt.jar&#10;export JAVA_HOME&#10;export JRE_HOME&#10;export PATH&#10;export CLASSPATH&#10;&#10;#&#20351;&#20462;&#25913;&#39532;&#19978;&#29983;&#25928;&#10;source /etc/profile&#10;&#10;#&#39564;&#35777;&#26159;&#21542;&#23433;&#35013;&#25104;&#21151;&#10;java -version</span><br></pre></td></tr></table></figure>
<h3 id="安装Tomcat应用服务器">安装Tomcat应用服务器</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local&#10;wget http://.../apache-tomcat-7.0.56.tar.gz&#10;tar -xzvf apache-tomcat-7.0.56.tar.gz&#10;mv apache-tomcat-7.0.56 tomcat1&#10;cp -R tomcat1 tomcat2</span><br></pre></td></tr></table></figure>
<h3 id="配置Tomact的server-conf">配置Tomact的server.conf</h3><p>8080端口实例的tomcat1配置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#60;Server port=&#34;8005&#34; shutdown=&#34;SHUTDOWN&#34;&#62;&#10;&#60;Connector port=&#34;8080&#34; protocol=&#34;HTTP/1.1&#34; connectionTimeout=&#34;20000&#34; redirectPort=&#34;8443&#34; /&#62;&#10;&#60;Connector port=&#34;8009&#34; protocol=&#34;AJP/1.3&#34; redirectPort=&#34;8443&#34; /&#62;&#10;&#10;&#60;Engine name=&#34;Catalina&#34; defaultHost=&#34;localhost&#34; jvmRoute=&#34;tomcat1&#34;&#62;&#10;...&#10;&#60;Context path=&#34;&#34; docBase=&#34;/home/imcc/web&#34; debug=&#34;0&#34; reloadable=&#34;true&#34; crossContext=&#34;true&#34;&#62;    &#10;&#9;&#60;Manager &#10;&#9;  className=&#34;de.javakaffee.web.msm.MemcachedBackupSessionManager&#34;&#10;      memcachedNodes=&#34;n1:localhost:11211&#34;&#10;&#9;  requestUriIgnorePattern=&#34;.*\.(png|gif|jpg|css|js|ico|jpeg|htm|html)$&#34;&#10;&#9;  sessionBackupAsync=&#34;false&#34;&#10;&#9;  sessionBackupTimeout=&#34;100&#34;&#10;&#9;  copyCollectionsForSerialization=&#34;false&#34;&#10;&#9;  transcoderFactoryClass=&#34;de.javakaffee.web.msm.serializer.kryo.KryoTranscoderFactory&#34; /&#62;&#10;&#60;/Context&#62;</span><br></pre></td></tr></table></figure>
<p>8081端口实例的tomcat1配置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#60;Server port=&#34;8006&#34; shutdown=&#34;SHUTDOWN&#34;&#62;&#10;&#60;Connector port=&#34;8081&#34; protocol=&#34;HTTP/1.1&#34; connectionTimeout=&#34;20000&#34; redirectPort=&#34;8443&#34; /&#62;&#10;&#60;Connector port=&#34;9009&#34; protocol=&#34;AJP/1.3&#34; redirectPort=&#34;8443&#34; /&#62;&#10;&#10;&#60;Engine name=&#34;Catalina&#34; defaultHost=&#34;localhost&#34; jvmRoute=&#34;tomcat2&#34;&#62;&#10;...&#10;&#60;Context path=&#34;&#34; docBase=&#34;/home/imcc/web&#34; debug=&#34;0&#34; reloadable=&#34;true&#34; crossContext=&#34;true&#34;&#62;    &#10;&#9;&#60;Manager &#10;&#9;  className=&#34;de.javakaffee.web.msm.MemcachedBackupSessionManager&#34;&#10;      memcachedNodes=&#34;n1:localhost:11211&#34;&#10;&#9;  requestUriIgnorePattern=&#34;.*\.(png|gif|jpg|css|js|ico|jpeg|htm|html)$&#34;&#10;&#9;  sessionBackupAsync=&#34;false&#34;&#10;&#9;  sessionBackupTimeout=&#34;100&#34;&#10;&#9;  copyCollectionsForSerialization=&#34;false&#34;&#10;&#9;  transcoderFactoryClass=&#34;de.javakaffee.web.msm.serializer.kryo.KryoTranscoderFactory&#34; /&#62;&#10;&#60;/Context&#62;</span><br></pre></td></tr></table></figure>
<p>备注：</p>
<p>Manager标签属性说明:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">className  &#24517;&#39035;&#10;&#31867;&#21517;&#65306;de.javakaffee.web.msm.MemcachedBackupSessionManager&#10;&#10;memcachedNodes  &#24517;&#39035;&#10;memcached&#33410;&#28857;&#65306;&#27492;&#23646;&#24615;&#24212;&#35813;&#21253;&#21547;&#25152;&#26377;&#36816;&#34892;&#30340;memcached&#33410;&#28857;&#25110;&#32773;membase bucket&#30340;uri&#22320;&#22336;&#65292;&#27599;&#19968;&#20010;memcached&#33410;&#28857;&#30340;&#23646;&#24615;&#23450;&#20041;&#26684;&#24335;&#20026;&#60;id&#62;:&#60;host&#62;:&#60;port&#62;&#65292;&#22810;&#20010;&#33410;&#28857;&#23450;&#20041;&#30452;&#25509;&#20351;&#29992;&#31354;&#26684;&#25110;&#32773;&#36887;&#21495;&#20998;&#38548;&#65292;&#24418;&#22914;&#65306;memcachedNodes=&#34;n1:app01:11211,n2:app02:11211&#34;&#65292;&#22914;&#26524;&#21482;&#26377;&#21333;&#20010;&#30340;memcached&#33410;&#28857;&#65292;&#21017;&#60;id&#62;&#26159;&#21487;&#36873;&#39033;&#65292;&#21482;&#38656;&#37197;&#32622;&#60;host&#62;:&#60;port&#62;&#21363;&#21487;&#65292;&#24418;&#22914;&#65306;memcachedNodes=&#34;localhost:11211&#34;&#12290;&#10;&#22914;&#26524;&#25105;&#20204;&#37197;&#32622;&#30340;&#26159;membase&#65292;&#37027;&#20040;&#20174;1.6.0&#29256;&#26412;&#24320;&#22987;&#65292;&#25105;&#20204;&#21487;&#20197;&#37197;&#32622;&#25351;&#23450;&#19968;&#20010;&#25110;&#32773;&#22810;&#20010;membase bucket uris&#65292;&#24418;&#22914;&#65306;http://host1:8091/pools,http://host2:8091/pools&#12290;Bucket &#21517;&#31216;&#21644;&#23494;&#30721;&#36890;&#36807;&#23646;&#24615;username,password&#26469;&#23450;&#20041;&#12290;membase buckets&#36830;&#25509;&#38656;&#35201;&#36981;&#24490;memcached&#21327;&#35758;&#65292;&#20256;&#36755;&#25968;&#25454;&#36890;&#36807;&#20108;&#36827;&#21046;&#27969;&#26041;&#24335;&#12290;&#10;&#10;failoverNodes &#21487;&#36873;&#39033;&#10;&#25925;&#38556;&#36716;&#31227;&#33410;&#28857;&#65306;&#21487;&#36873;&#39033;&#65292;&#23545;&#38750;&#40655;&#24615;session&#19981;&#21487;&#29992;&#65292;&#23646;&#24615;&#24517;&#39035;&#21253;&#21547;memcached&#33410;&#28857;&#38598;&#32676;&#30340;&#25152;&#26377;ids&#12290;&#33410;&#28857;id&#20043;&#38388;&#29992;&#31354;&#26684;&#25110;&#32773;&#36887;&#21495;&#20998;&#38548;&#12290;&#10;&#10;username &#21487;&#36873;&#39033;&#10;&#20174;1.6.0&#29256;&#24320;&#22987;&#20351;&#29992;&#65292;&#24182;&#19988;&#26159;&#21487;&#36873;&#30340;&#12290;&#29992;&#26469;&#36827;&#34892;membase bucket&#25110;&#32773;SASL&#39564;&#35777;&#65292;&#23494;&#30721;&#21487;&#20197;&#20026;&#31354;&#12290;&#10;&#10;password &#21487;&#36873;&#39033;&#10;&#20174;1.6.0&#29256;&#24320;&#22987;&#20351;&#29992;&#65292;&#24182;&#19988;&#26159;&#21487;&#36873;&#30340;&#12290;&#29992;&#26469;&#36827;&#34892;membase bucket&#25110;&#32773;SASL&#39564;&#35777;&#65292;&#23494;&#30721;&#21487;&#20197;&#20026;&#31354;&#12290;&#10;&#10;memcachedProtocol    &#21487;&#36873;&#39033;&#10;&#23450;&#20041;memcached&#21327;&#35758;&#65292;&#40664;&#35748;&#20351;&#29992;text&#25991;&#26412;&#65292;&#20986;&#23646;&#24615;&#25351;&#26126;memcached&#20351;&#29992;&#30340;&#23384;&#20648;&#21327;&#35758;&#12290;&#21482;&#25903;&#25345;text&#25110;&#32773;binary&#12290;&#10;&#10;sticky    &#21487;&#36873;&#39033;&#10;&#23450;&#20041;session&#26041;&#24335;&#20026;&#40655;&#24615;&#25110;&#38750;&#40655;&#24615;&#65292;&#40664;&#35748;&#20026;true&#65292;&#22810;&#20010;tomcat&#26102;&#38656;&#20351;&#29992;&#38750;&#40655;&#24615;&#10;&#10;lockingMode    &#21487;&#36873;&#39033;&#10;&#21482;&#26377;&#38750;&#40655;&#24615;session&#25165;&#20351;&#29992;&#65292;&#40664;&#35748;&#20540;&#20026;none&#10;none: &#20174;&#19981;&#23545;session&#36827;&#34892;&#38145;&#23450;&#10;all: session&#23558;&#19968;&#30452;&#34987;&#38145;&#23450;&#65292;&#30452;&#21040;&#35831;&#27714;&#32467;&#26463;&#10;auto: &#23545;&#20110;&#21482;&#35835;&#35831;&#27714;&#65292;session&#23558;&#19981;&#20250;&#34987;&#38145;&#23450;&#65292;&#22914;&#26524;&#26159;&#38750;&#21482;&#35835;&#35831;&#27714;&#65292;&#21017;session&#20250;&#34987;&#38145;&#23450;&#10;uriPattern:&#60;regexp&#62;: &#36890;&#36807;&#27491;&#21017;&#34920;&#36798;&#24335;&#30340;&#26041;&#24335;&#26469;&#23545;&#35831;&#27714;uri&#20197;&#21450;&#26597;&#35810;&#23383;&#31526;&#20018;&#36827;&#34892;&#21305;&#37197;&#65292;&#21482;&#26377;&#21305;&#37197;&#19978;&#30340;&#25165;&#20250;&#34987;&#38145;&#23450;&#12290;&#10;&#10;requestUriIgnorePattern   &#21487;&#36873;&#39033;&#10;&#27492;&#23646;&#24615;&#26159;&#37027;&#20123;&#19981;&#33021;&#25913;&#22791;&#20221;Session&#30340;&#35831;&#27714;&#30340;&#27491;&#21017;&#34920;&#36798;&#24335;&#12290;&#22914;&#26524;&#20687;css,javascript,&#22270;&#29255;&#31561;&#38745;&#24577;&#25991;&#20214;&#34987;&#21516;&#19968;&#20010;Tomcat&#21644;&#21516;&#19968;&#20010;&#24212;&#29992;&#19978;&#19979;&#25991;&#26469;&#25552;&#20379;&#65292;&#36825;&#20123;&#35831;&#27714;&#20063;&#20250;&#36890;&#36807;memcached-session-manager&#12290;&#20294;&#26159;&#36825;&#20123;&#35831;&#27714;&#22312;&#19968;&#20010;http&#20250;&#35805;&#20013;&#20960;&#20046;&#27809;&#20160;&#20040;&#25913;&#21464;&#65292;&#25152;&#20197;&#20182;&#20204;&#27809;&#24517;&#35201;&#35302;&#21457;Session&#22791;&#20221;&#12290;&#25152;&#20197;&#37027;&#20123;&#38745;&#24577;&#25991;&#20214;&#27809;&#24517;&#35201;&#35302;&#21457;Session&#22791;&#20221;&#65292;&#20320;&#23601;&#21487;&#20197;&#20351;&#29992;&#27492;&#23646;&#24615;&#23450;&#20041;&#12290;&#27492;&#23646;&#24615;&#24517;&#39035;&#31526;&#21512;java regex&#27491;&#21017;&#35268;&#33539;&#12290;&#10;    &#22914;&#65306;&#34;.*\.(png|gif|jpg|css|js)$&#34; &#10;&#10;sessionBackupAsync   &#21487;&#36873;&#39033;&#10;&#25351;&#23450;Session&#26159;&#21542;&#24212;&#35813;&#34987;&#24322;&#27493;&#20445;&#23384;&#21040;Memcached&#20013;&#12290; &#22914;&#26524;&#34987;&#35774;&#32622;&#20026;true&#65292;backupThreadCount&#35774;&#32622;&#36215;&#20316;&#29992;&#65292;&#22914;&#26524;&#35774;&#32622;false&#65292;&#36890;&#36807;sessionBackupTimeout&#35774;&#32622;&#30340;&#36807;&#26399;&#26102;&#38388;&#36215;&#20316;&#29992;&#12290;&#10;&#10;backupThreadCount    &#21487;&#36873;&#39033;&#10;&#29992;&#26469;&#24322;&#27493;&#20445;&#23384;Session&#30340;&#32447;&#31243;&#25968;&#65292;(&#22914;&#26524;sessionBackupAsync=&#34;true&#34;)&#12290;&#40664;&#35748;&#20540;&#20026;cup&#30340;&#20869;&#26680;&#25968;&#12290;&#10;&#10;sessionBackupTimeout    &#21487;&#36873;&#39033;&#10;&#35774;&#32622;&#22791;&#20221;&#19968;&#20010;Session&#25152;&#29992;&#30340;&#26102;&#38388;&#65292;&#22914;&#26524;&#25805;&#20316;&#36229;&#36807;&#26102;&#38388;&#37027;&#20040;&#20445;&#23384;&#22833;&#36133;&#12290;&#27492;&#23646;&#24615;&#21482;sessionBackupAsync=&#34;false&#34;&#26159;&#36215;&#20316;&#29992;&#12290;&#40664;&#35748;100&#27627;&#31186;&#10;&#10;operationTimeout    &#21487;&#36873;&#39033;&#10;&#20174;1.6.0&#29256;&#24320;&#22987;&#20351;&#29992;&#65292; &#40664;&#35748;&#20540;&#20026;1000&#10;&#10;sessionAttributeFilter    &#21487;&#36873;&#39033;&#10;&#27492;&#23646;&#24615;&#26159;&#29992;&#26469;&#25511;&#21046;Session&#20013;&#30340;&#37027;&#20010;&#23646;&#24615;&#20540;&#20445;&#23384;&#21040;Memcached&#20013;&#30340;&#27491;&#21017;&#34920;&#36798;&#24335;&#12290;&#27491;&#21017;&#34920;&#36798;&#24335;&#34987;&#29992;&#26469;&#21305;&#37197;Session&#20013;&#23646;&#24615;&#21517;&#31216;&#12290;&#22914;sessionAttributeFilter=&#34;^(userName|sessionHistory)$&#34; &#25351;&#23450;&#20102;&#21482;&#26377;&#34;userName&#34;&#21644;&#34;sessionHistory&#34;&#23646;&#24615;&#20445;&#23384;&#21040;Memcached&#20013;&#12290;&#20381;&#36182;&#20110;&#36873;&#25321;&#30340;&#24207;&#21015;&#21270;&#31574;&#30053;&#12290;&#10;&#10;transcoderFactoryClass    &#21487;&#36873;&#39033;&#10;&#27492;&#23646;&#24615;&#20540;&#26159;&#21019;&#24314;&#24207;&#21015;&#21270;&#21644;&#21453;&#24207;&#21015;&#21270;&#20445;&#23384;&#21040;Memcached&#20013;&#30340;Session&#30340;&#32534;&#30721;&#36716;&#25442;&#22120;&#30340;&#24037;&#21378;&#31867;&#21517;&#12290;&#36825;&#20010;&#25351;&#23450;&#30340;&#31867;&#24517;&#39035;&#23454;&#29616;&#20102;de.javakaffee.web.msm.TranscoderFactory&#21644;&#25552;&#20379;&#19968;&#20010;&#26080;&#21442;&#30340;&#26500;&#36896;&#26041;&#27861;&#12290;&#20363;&#22914;&#20854;&#20182;&#30340;&#26377;&#25928;&#30340;&#23454;&#29616;&#22312;&#20854;&#20182;packages/jars&#20013;&#25552;&#20379;&#22914;&#65306;msm-kryo-serializer,msm-xstrea-serializer&#21644;msm-javolution-serializer.&#10;&#40664;&#35748;&#20026; de.javakaffee.web.msm.JavaSerializationTranscoderFactory&#10;&#10;copyCollectionsForSerialization    &#21487;&#36873;&#39033;&#10;&#40664;&#35748;&#20540;&#20026;false&#12290;&#10;&#10;customConverter    &#21487;&#36873;&#39033;&#10;&#33258;&#24049;&#23450;&#20041;&#29305;&#27530;&#30340;&#31867;&#27880;&#20876;&#21040;kryo&#33258;&#23450;&#20041;&#36716;&#25442;&#22120;&#20013;&#65292;&#23454;&#29616;&#24207;&#21015;&#21270;&#10;&#10;enableStatistics    &#21487;&#36873;&#39033;&#10;&#29992;&#26469;&#25351;&#23450;&#26159;&#21542;&#36827;&#34892;&#32479;&#35745;&#12290; &#40664;&#35748;&#20540;&#20026;true&#12290;&#10;&#10;enabled   &#21487;&#36873;&#39033;&#10;&#25351;&#23450;Session&#20445;&#23384;&#21040;Memcached&#20013;&#26159;&#21542;&#21487;&#29992;&#21644;&#26159;&#21542;&#21487;&#20197;&#36890;&#36807;JMX&#36827;&#34892;&#25913;&#21464;&#12290;&#21482;&#29992;&#20110;&#31896;&#24615;Session&#12290; &#40664;&#35748;&#20540;&#20026;true&#12290;</span><br></pre></td></tr></table></figure>
<p>添加memcached-session-manager的依赖包到$TOMCATHOME/lib目录下</p>
<h2 id="测试">测试</h2><p>添加测试页面<code>/home/imcc/web/index.jsp</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SessionID:&#60;%=session.getId()%&#62;  &#10;&#60;BR&#62;  &#10;SessionIP:&#60;%=request.getServerName()%&#62;  &#10;&#60;BR&#62;  &#10;SessionPort:&#60;%=request.getServerPort()%&#62;  &#10;&#60;%  &#10;out.println(&#34;This is Tomcat Server!&#34;);  &#10;%&#62;</span><br></pre></td></tr></table></figure>
<p>通过浏览器访问,并刷新:<br><img src="http://wy-uploads.qiniudn.com/MSM_3.png" alt="此处输入图片的描述"><br><img src="http://wy-uploads.qiniudn.com/MSM_4.png" alt="此处输入图片的描述"></p>
<p>查看memcached日志：<br><img src="http://wy-uploads.qiniudn.com/MSM_5.png" alt="此处输入图片的描述"><br>通过观察SessionID没有发生变化，证明session共享成功。</p>
<p>参考：<br><a href="http://www.iteye.com/topic/1125301" target="_blank" rel="external">MSM—Memcached_Session_Manager介绍及使用</a><br><a href="http://blog.csdn.net/wh0426/article/details/44699449" target="_blank" rel="external">交易系统架构之会话篇：tomcat msm部署</a><br><a href="http://blog.csdn.net/shimiso/article/details/8979044" target="_blank" rel="external">Nginx+Tomcat+Memcached集群Session共享</a><br><a href="http://passover.blog.51cto.com/2431658/648182" target="_blank" rel="external">利用nginx+tomcat+memcached组建web服务器负载均衡</a><br><a href="http://www.cnblogs.com/phirothing/archive/2013/12/05/3459814.html" target="_blank" rel="external">Nginx+Tomcat+Memcached集群</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="部署环境">部署环境</h2><p>系统：Centos<br>软件及依赖包：<br>Nginx:<br>nginx-1.6.2.tar.gz<br>(<a href="http://nginx.org/download/nginx-1.6.2.tar.gz">http://nginx.org/download/nginx-1.6.2.tar.gz</a>)<br>pcre-8.36.tar.gz (ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.36.tar.gz)<br>zlib-1.2.8.tar.gz(<a href="http://zlib.net/zlib-1.2.8.tar.gz">http://zlib.net/zlib-1.2.8.tar.gz</a>)</p>
<p>memcached：<br>memcached-1.4.22.tar.gz(<a href="http://memcached.org/files/memcached-1.4.22.tar.gz">http://memcached.org/files/memcached-1.4.22.tar.gz</a>)<br>libevent-2.0.22-stable.tar.gz(<a href="http://libevent.org/">http://libevent.org/</a>)</p>
<p>memcached-session-manager：<br><a href="http://repo1.maven.org/maven2/de/javakaffee/msm/">下载地址</a></p>
<p>Tomcat：<br>apache-tomcat-7.0.59.tar.gz (<a href="http://mirrors.cnnic.cn/apache/tomcat/tomcat-7/v7.0.59/bin/apache-tomcat-7.0.59.tar.gz">http://mirrors.cnnic.cn/apache/tomcat/tomcat-7/v7.0.59/bin/apache-tomcat-7.0.59.tar.gz</a>)<br>jdk-7u72-linux-x64.tar.gz</p>
<p>jar包：<br>我采用的是截止目前最新的版本，其中序列化方式是可选的。<br>序列化方式使用kryo时,jar包：<a href="http://wy-uploads.qiniudn.com/MSM_kryo.zip">下载地址</a><br><img src="http://wy-uploads.qiniudn.com/MSM_1.png" alt="此处输入图片的描述"></p>
<p>序列化方式使用javolution时,jar包：<a href="http://wy-uploads.qiniudn.com/MSM_javolution.zip">下载地址</a><br><img src="http://wy-uploads.qiniudn.com/MSM_2.png" alt="此处输入图片的描述"></p>
<p>了解到kryo序列化方式效率最高。</p>
<p>相关序列方式，所需不同jar包，可参考<a href="https://code.google.com/p/memcached-session-manager/wiki/SetupAndConfiguration">官方文档</a></p>]]>
    
    </summary>
    
      <category term="集群" scheme="http://www.mr-wang.cn/tags/%E9%9B%86%E7%BE%A4/"/>
    
      <category term="技术" scheme="http://www.mr-wang.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CentOS下Oracle安装]]></title>
    <link href="http://www.mr-wang.cn/2015/07/16/CentOS-Oracle-installation/"/>
    <id>http://www.mr-wang.cn/2015/07/16/CentOS-Oracle-installation/</id>
    <published>2015-07-16T12:26:27.000Z</published>
    <updated>2015-10-15T12:58:18.427Z</updated>
    <content type="html"><![CDATA[<h1 id="安装前准备">安装前准备</h1><h2 id="安装依赖包">安装依赖包</h2><p>oracle 安装所需程序包,可以到安装步骤时，查看缺少什么程序就安装什么程序</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">binutils-2.17.50.0.6&#10;compat-libstdc++-33-3.2.3&#10;compat-libstdc++-33-3.2.3 (32 bit)&#10;elfutils-libelf-0.125&#10;elfutils-libelf-devel-0.125&#10;gcc-4.1.2&#10;gcc-c++-4.1.2&#10;glibc-2.5-24&#10;glibc-2.5-24 (32 bit)&#10;glibc-common-2.5&#10;glibc-devel-2.5&#10;glibc-devel-2.5 (32 bit)&#10;glibc-headers-2.5&#10;ksh-20060214&#10;libaio-0.3.106&#10;libaio-0.3.106 (32 bit)&#10;libaio-devel-0.3.106&#10;libaio-devel-0.3.106 (32 bit)&#10;libgcc-4.1.2&#10;libgcc-4.1.2 (32 bit)&#10;libstdc++-4.1.2&#10;libstdc++-4.1.2 (32 bit)&#10;libstdc++-devel 4.1.2&#10;make-3.81&#10;sysstat-7.0.2&#10;unixODBC-2.2.14-11.el6 (x86_64) or later&#10;unixODBC-2.2.14-11.el6.i686 or later&#10;unixODBC-devel-2.2.14-11.el6 (x86_64) or later&#10;unixODBC-devel-2.2.14-11.el6.i686 or later&#10;libXp</span><br></pre></td></tr></table></figure>
<p>使用命令 yum install -y ‘package name’ 安装所缺的程序包，pdksh包除外</p>
<p>安装pdksh包，使用rz命令上传pdksh-5.2.14-37.el5_8.1.x86_64.rpm文件到/opt/目录下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># &#27880;&#24847;&#65306;&#35813;&#31243;&#24207;&#21253;&#19982;ksh&#20914;&#31361;&#65292;&#22914;&#26524;&#24050;&#32463;&#23433;&#35013;ksh&#65292;&#24314;&#35758;&#20351;&#29992;&#21629;&#20196; rpm -e ksh-* &#21368;&#36733;&#10;&#10;rpm -ivh pdksh-5.2.14-37.el5_8.1.x86_64.rpm</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="创建用户及安装目录">创建用户及安装目录</h2><p>使用rz上传p10404530_112030_Linux-x86-64_1of7.zip、p10404530_112030_Linux-x86-64_2of7.zip到/opt/目录下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># &#20998;&#21035;&#35299;&#21387;&#19978;&#20256;&#30340;&#25991;&#20214;,&#35299;&#21387;&#24471;&#21040;database&#25991;&#20214;&#22841;&#10;unzip -x p10404530_112030_Linux-x86-64_1of7.zip&#10;unzip -x p10404530_112030_Linux-x86-64_2of7.zip&#10;&#10;# &#21019;&#24314;oracle&#29992;&#25143;&#21644;&#32452;,&#24182;&#35774;&#32622;&#23494;&#30721;&#10;groupadd oinstall&#10;groupadd dba&#10;useradd -g oinstall -G dba oracle&#10;passwd oracle&#10;&#10;# &#21019;&#24314;oracl&#23433;&#35013;&#30446;&#24405;&#65292;&#24182;&#23558;&#30446;&#24405;&#26435;&#38480;&#36171;&#20104;oracle&#29992;&#25143;&#10;mkdir -p /data/DBSoft/oracle/product/11.2.0/db_1&#10;chown -R oracle:oinstall /data/DBSoft/oracle&#10;chmod -R 755 /data/DBSoft/oracle&#10;&#10;# &#23433;&#35013;&#26102;&#36824;&#38656;&#35201;&#35774;&#32622;Inventory&#30446;&#24405;&#65292;&#25152;&#20197;&#21019;&#24314;&#24182;&#36171;&#20104;&#26435;&#38480;&#10;mkdir -p /data/DBSoft/oraInventory&#10;chown -R oracle:oinstall /data/DBSoft/oraInventory&#10;chmod -R 755 /data/DBSoft/oraInventory</span><br></pre></td></tr></table></figure>
<h2 id="修改系统参数">修改系统参数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># &#20462;&#25913;hosts&#25991;&#20214;&#65292;&#23558;127.0.0.1&#20462;&#25913;&#20026;&#26412;&#26426;&#30340;ip&#65292;&#36991;&#20813;&#23433;&#35013;Oracle&#22312;Oracle Net Configuration Assistant&#26102;&#20250;&#22833;&#36133;&#10;vi /etc/hosts&#10;&#10;192.168.1.250   dbsrver localhost&#10;::1     localhost6 localhost6.localdomain6&#10;&#10;&#10;# &#20462;&#25913;&#20869;&#26680;&#21442;&#25968;&#10;vi /etc/sysctl.conf&#10;&#10;kernel.shmmni = 4096&#10;kernel.sem = 250 32000 100 128&#10;net.ipv4.ip_local_port_range = 9000 65500&#10;fs.file-max = 6815744&#10;net.core.rmem_default = 262144&#10;net.core.rmem_max = 4194304&#10;net.core.wmem_default = 262144&#10;net.core.wmem_max = 1048576&#10;fs.aio-max-nr = 1048576&#10;&#10;# &#20877;&#25191;&#34892;&#20197;&#19979;&#21629;&#20196;&#20351;&#20197;&#19978;&#37197;&#32622;&#31435;&#21363;&#29983;&#25928;&#10;sysctl -p&#10;&#10;# &#32534;&#36753;&#31995;&#32479;&#36164;&#28304;&#38480;&#21046;&#37197;&#32622;&#25991;&#20214;&#10;vi /etc/security/limits.conf&#10;&#10;oracle soft nproc 2047&#10;oracle hard nproc 16384&#10;oracle soft nofile 1024&#10;oracle hard nofile 65536</span><br></pre></td></tr></table></figure>
<h2 id="配置oracle默认安装参数">配置oracle默认安装参数</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># &#20999;&#25442;&#21040;orcale&#29992;&#25143;&#65292;&#20462;&#25913;/home/oracle/.bash_profile&#25991;&#20214;&#10;su - oracle&#10;vi ~/.bash_profile&#10;&#10;# &#35774;&#32622;oracle&#29992;&#25143;&#29615;&#22659;&#21464;&#37327;&#65292;&#28155;&#21152;&#22914;&#19979;&#10;#&#23433;&#35013;&#30446;&#24405;&#10;export ORACLE_BASE=/data/DBSoft/oracle&#10;#oracle&#23478;&#30446;&#24405;&#10;export ORACLE_HOME=$ORACLE_BASE/product/11.2.0/db_1&#10;export PATH=$ORACLE_HOME/bin:$PATH&#10;&#10;# &#20445;&#23384;&#36864;&#20986;&#21518;&#25191;&#34892;&#22914;&#19979;&#21629;&#20196;&#20351;&#20197;&#19978;&#35774;&#32622;&#31435;&#21363;&#29983;&#25928;,&#24182;env&#25110;&#32773;echo $PATH&#26597;&#30475;&#19979;&#10;source ~/.bash_profile</span><br></pre></td></tr></table></figure>
<h1 id="开始安装oracle">开始安装oracle</h1><h2 id="配置远程安装环境">配置远程安装环境</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># oracle&#23433;&#35013;&#38656;&#35201;X-window&#29615;&#22659;&#65292;&#20294;&#26159;&#32771;&#34385;&#21040;&#26368;&#22823;&#21270;&#21033;&#29992;&#26381;&#21153;&#22120;&#24615;&#33021;&#65292;&#19968;&#33324;&#26381;&#21153;&#22120;&#20013;&#19981;&#20250;&#23433;&#35013;X-windows&#29615;&#22659;&#12290;&#25152;&#20197;&#36873;&#25321;&#36828;&#31243;&#26469;&#23433;&#35013;oracle&#12290;&#10;&#10;# &#35774;&#32622;&#35821;&#35328;&#29615;&#22659;LANG&#21644;LC_ALL,&#25913;&#20026;&#33521;&#25991;&#29615;&#22659;&#10;export LANG=en_US&#10;export LC_ALL=en_US&#10;&#10;# &#20351;&#29992;Xmanager&#26469;&#36828;&#31243;&#26174;&#31034;oracle&#30340;&#23433;&#35013;&#30028;&#38754;&#65292;&#23433;&#35013;&#36807;&#31243;&#20013;&#21487;&#33021;&#36935;&#21040;&#30028;&#38754;&#26174;&#31034;&#19981;&#23436;&#20840;&#30340;&#38382;&#39064;&#65292;&#22240;&#20026;&#25105;&#26159;&#22312;&#34394;&#25311;&#26426;&#20013;&#23433;&#35013;&#65292;&#29468;&#27979;&#26159;&#19982;&#20869;&#23384;&#22823;&#23567;&#26377;&#20851;&#10;export DISPLAY=192.168.1.233:0.0&#10;./runInstall</span><br></pre></td></tr></table></figure>
<h2 id="安装数据库软件">安装数据库软件</h2><p>1.进入图形化界面，一步步安装，取消勾选I wish…（依照个人），点击Next，弹出确认框再点Yes<br><img src="http://wy-uploads.qiniudn.com/oracle_1.png" alt="此处输入图片的描述"><br><img src="http://wy-uploads.qiniudn.com/oracle_2.png" alt="此处输入图片的描述"></p>
<p>2.询问是否软件升级，选择”Skip software updates”<br><img src="http://wy-uploads.qiniudn.com/oracle_3.png" alt="此处输入图片的描述"></p>
<p>3.选择第二项：Install database software only，只安装数据库软件<br><img src="http://wy-uploads.qiniudn.com/oracle_4.png" alt="此处输入图片的描述"></p>
<p>4.保持默认：Singel instance database installation，点击Next<br><img src="http://wy-uploads.qiniudn.com/oracle_5.png" alt="此处输入图片的描述"></p>
<p>5.选择产品语言，默认英语，附加选择了简体中文，点击Next<br><img src="http://wy-uploads.qiniudn.com/oracle_6.png" alt="此处输入图片的描述"></p>
<p>6.选择数据库版本，默认企业版，点击Next<br><img src="http://wy-uploads.qiniudn.com/oracle_7.png" alt="此处输入图片的描述"></p>
<p>7.配置Oracle安装目录，由于安装前环境变量的配置，安装程序自动读取配置，自动选择好了<br><img src="http://wy-uploads.qiniudn.com/oracle_8.png" alt="此处输入图片的描述"></p>
<p>8.同上，Oracle Inventory Directory目录也自动选择好了，oraInventory Group Name选择安装前创建的组oinstall，点击Next<br><img src="http://wy-uploads.qiniudn.com/oracle_9.png" alt="此处输入图片的描述"></p>
<p>9.保持默认，点击Next<br><img src="http://wy-uploads.qiniudn.com/oracle_10.png" alt="此处输入图片的描述"></p>
<p>10.安装检查中<br><img src="http://wy-uploads.qiniudn.com/oracle_11.png" alt="此处输入图片的描述"></p>
<p>11.检查结束，不满足条件列表,可以针对packages包进行yum install<br><img src="http://wy-uploads.qiniudn.com/oracle_12.png" alt="此处输入图片的描述"></p>
<p>12.忽略物理内存和交换分区的警告<br><img src="http://wy-uploads.qiniudn.com/oracle_13.png" alt="此处输入图片的描述"></p>
<p>13.配置确认，安装<br><img src="http://wy-uploads.qiniudn.com/oracle_14.png" alt="此处输入图片的描述"></p>
<p>14.root用户下，命令执行提示sh文件<br><img src="http://wy-uploads.qiniudn.com/oracle_15.png" alt="此处输入图片的描述"></p>
<h2 id="安装监听">安装监听</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># &#22312;oracle&#29992;&#25143;&#19979;&#10;netca</span><br></pre></td></tr></table></figure>
<p><img src="http://wy-uploads.qiniudn.com/oracle_31.png" alt="此处输入图片的描述"></p>
<p><img src="http://wy-uploads.qiniudn.com/oracle_32.png" alt="此处输入图片的描述"></p>
<p><img src="http://wy-uploads.qiniudn.com/oracle_33.png" alt="此处输入图片的描述"></p>
<p><img src="http://wy-uploads.qiniudn.com/oracle_34.png" alt="此处输入图片的描述"></p>
<p><img src="http://wy-uploads.qiniudn.com/oracle_35.png" alt="此处输入图片的描述"><br>提示1521端口被占用，这里是因为我安装过程中修改过hostname，导致的<br><img src="http://wy-uploads.qiniudn.com/oracle_36.png" alt="此处输入图片的描述"></p>
<p><img src="http://wy-uploads.qiniudn.com/oracle_37.png" alt="此处输入图片的描述"></p>
<h2 id="安装数据库实例">安装数据库实例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># &#22312;oracle&#29992;&#25143;&#19979;&#10;dbca</span><br></pre></td></tr></table></figure>
<p><img src="http://wy-uploads.qiniudn.com/oracle_16.png" alt="此处输入图片的描述"></p>
<p><img src="http://wy-uploads.qiniudn.com/oracle_17.png" alt="此处输入图片的描述"></p>
<p><img src="http://wy-uploads.qiniudn.com/oracle_18.png" alt="此处输入图片的描述"><br>配置全局数据库名称<br><img src="http://wy-uploads.qiniudn.com/oracle_19.png" alt="此处输入图片的描述"><br>取消EM管理界面<br><img src="http://wy-uploads.qiniudn.com/oracle_20.png" alt="此处输入图片的描述"></p>
<p><img src="http://wy-uploads.qiniudn.com/oracle_21.png" alt="此处输入图片的描述"><br>备配置置超级管理员密码，统一密码<br><img src="http://wy-uploads.qiniudn.com/oracle_22.png" alt="此处输入图片的描述"></p>
<p><img src="http://wy-uploads.qiniudn.com/oracle_23.png" alt="此处输入图片的描述"></p>
<p><img src="http://wy-uploads.qiniudn.com/oracle_24.png" alt="此处输入图片的描述"></p>
<p><img src="http://wy-uploads.qiniudn.com/oracle_25.png" alt="此处输入图片的描述"><br>修改数据库字符编码<br><img src="http://wy-uploads.qiniudn.com/oracle_26.png" alt="此处输入图片的描述"></p>
<p><img src="http://wy-uploads.qiniudn.com/oracle_27.png" alt="此处输入图片的描述"></p>
<p><img src="http://wy-uploads.qiniudn.com/oracle_28.png" alt="此处输入图片的描述"></p>
<p><img src="http://wy-uploads.qiniudn.com/oracle_29.png" alt="此处输入图片的描述"></p>
<p><img src="http://wy-uploads.qiniudn.com/oracle_30.png" alt="此处输入图片的描述"></p>
<h2 id="配置本地网络服务名">配置本地网络服务名</h2><p>配置本地网络服务名（使服务器充当oracle客户端，连接自己，对数据库进行操作）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># &#22312;oracle&#29992;&#25143;&#19979;&#10;netca</span><br></pre></td></tr></table></figure>
<p><img src="http://wy-uploads.qiniudn.com/oracle_38.png" alt="此处输入图片的描述"><br><img src="http://wy-uploads.qiniudn.com/oracle_39.png" alt="此处输入图片的描述"><br>输入连接的oracle服务器的数据库的实例名，这里输入本机的。<br><img src="http://wy-uploads.qiniudn.com/oracle_40.png" alt="此处输入图片的描述"><br><img src="http://wy-uploads.qiniudn.com/oracle_41.png" alt="此处输入图片的描述"><br>输入oracle服务器的ip地址，这里输入本机的ip<br><img src="http://wy-uploads.qiniudn.com/oracle_42.png" alt="此处输入图片的描述"><br>选中测试<br><img src="http://wy-uploads.qiniudn.com/oracle_43.png" alt="此处输入图片的描述"><br>点击change Login 输入所连接oracle服务器的其中某一个用户名和密码，点击OK<br><img src="http://wy-uploads.qiniudn.com/oracle_44.png" alt="此处输入图片的描述"><br>看到此界面说明测试成功<br><img src="http://wy-uploads.qiniudn.com/oracle_45.png" alt="此处输入图片的描述"><br>为你所设置的本地网络服务名起个名字，与实例名不能相同<br><img src="http://wy-uploads.qiniudn.com/oracle_46.png" alt="此处输入图片的描述"><br><img src="http://wy-uploads.qiniudn.com/oracle_47.png" alt="此处输入图片的描述"></p>
<h1 id="遇到的问题">遇到的问题</h1><h2 id="重启linux后，dbca命令无法找到">重启linux后，dbca命令无法找到</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/profile&#10;&#10;# &#28155;&#21152;&#22914;&#19979;&#20869;&#23481;&#10;# set Oracle&#10;export ORACLE_SID=demo  #&#25968;&#25454;&#24211;&#23454;&#20363;ID    &#10;export ORACLE_BASE=/DBSoft/oracle #&#23433;&#35013;&#30446;&#24405;&#10;export ORACLE_HOME=$ORACLE_BASE/product/11.2.0/db_1 #oracle&#23478;&#30446;&#24405;&#10;export PATH=$ORACLE_HOME/bin:$PATH&#10;&#10;# &#20351;&#37197;&#32622;&#29983;&#25928;&#10;source /etc/profile</span><br></pre></td></tr></table></figure>
<h2 id="安装oracle软件后，安装监听报错">安装oracle软件后，安装监听报错</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Oracle Net Services Configuration:&#10;#&#10;# An unexpected error has been detected by HotSpot Virtual Machine:&#10;#&#10;# SIGSEGV (0xb) at pc=0xa4bf5f4e, pid=11819, tid=3086902976&#10;#&#10;# Java VM: Java HotSpot(TM) Client VM (1.5.0_17-b02 mixed mode)&#10;# Problematic frame:&#10;# C [libclntsh.so.11.1+0x421f4e] snlinGetAddrInfo+0x1b2&#10;#&#10;# An error report file with more information is saved as hs_err_pid11819.log&#10;#&#10;# If you would like to submit a bug report, please visit:&#10;#   http://java.sun.com/webapps/bugreport/crash.jsp&#10;#&#10;/u01/oracle/bin/netca: line 178: 11819 Aborted                 $JRE $JRE_OPTIONS -classpath $CLASSPATH oracle.net.ca.NetCA $*</span><br></pre></td></tr></table></figure>
<p>原因是安装Centos的时候，默认主机名没有修改。对其进行修改。（安装centos时，计算机名必须修改）</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#&#20462;&#25913;hostname&#10;vi /etc/sysconfig/network&#10;HOSTNAME=dbserver&#10;#&#20462;&#25913;hosts&#25991;&#20214;&#10;vi /etc/hosts&#10;192.168.1.250   dbsrver localhost&#10;::1  localhost6 localhost6.localdomain6</span><br></pre></td></tr></table></figure>
<h2 id="安装完监听后，启动监听报错。">安装完监听后，启动监听报错。</h2><p>怀疑与安装监听时提示1521端口被占用有关</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[oracle@dbserver database]$ netstat -an | grep 1521&#10;[oracle@dbserver database]$ lsnrctl stat&#10;&#10;LSNRCTL for Linux: Version 11.2.0.3.0 - Production on 29-MAR-2015 15:09:14&#10;&#10;Copyright (c) 1991, 2011, Oracle.  All rights reserved.&#10;&#10;Connecting to (DESCRIPTION=(ADDRESS=(PROTOCOL=TCP)(PORT=1521)))&#10;TNS-12541: TNS:no listener&#10; TNS-12560: TNS:protocol adapter error&#10;  TNS-00511: No listener&#10;   Linux Error: 111: Connection refused&#10;Connecting to (DESCRIPTION=(ADDRESS=(PROTOCOL=IPC)(KEY=EXTPROC1521)))&#10;TNS-12541: TNS:no listener&#10; TNS-12560: TNS:protocol adapter error&#10;  TNS-00511: No listener&#10;   Linux Error: 2: No such file or directory</span><br></pre></td></tr></table></figure>
<p>原因是 $ORAACLE_HOME/network/admin/listener.ora 文件中的 host未定义。</p>
<h1 id="其他知识">其他知识</h1><h2 id="数据库名、实例名、SID、服务名、网络服务名">数据库名、实例名、SID、服务名、网络服务名</h2><p>数据库名：建数据库时候填写的global database name（<code>select name from v$database;</code>）<br>SID：建数据库时候填写的SID<br>实例名：与数据库名一致（<code>select instance_name from v$instance</code>）</p>
<h2 id="Linux_oracle数据库listener-ora存放路径">Linux oracle数据库listener.ora存放路径</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /data/DBSoft/oracle/product/11.2.0/db_1/network/admin/listener.ora</span><br></pre></td></tr></table></figure>
<h2 id="Linux_oracle数据库tnsnames-ora存放路径">Linux oracle数据库tnsnames.ora存放路径</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /data/DBSoft/oracle/product/11.2.0/db_1/network/admin/tnsnames.ora</span><br></pre></td></tr></table></figure>
<h2 id="ORACLE多个实例">ORACLE多个实例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">LISTENER =&#10;  (DESCRIPTION_LIST =&#10;    (DESCRIPTION =&#10;      (ADDRESS = (PROTOCOL = TCP)(HOST = localhost)(PORT = 1521))&#10;      (ADDRESS = (PROTOCOL = IPC)(KEY = EXTPROC1521))&#10;    )&#10;  )&#10;  &#10;#SID1&#12289;SID2&#21363;&#20026;2&#20010;&#23454;&#20363;&#21517;&#31216;&#10;SID_LIST_LISTENER =&#10;  (SID_LIST =&#10;    (SID_DESC =&#10;      (GLOBAL_DBNAME = SID1)&#10;      (ORACLE_HOME = /data/DBSoft/oracle/product/11.2.0/db_1)&#10;      (SID_NAME = SID1)&#10;    )&#10;    (SID_DESC =&#10;      (GLOBAL_DBNAME = SID2)&#10;      (ORACLE_HOME = /data/DBSoft/oracle/product/11.2.0/db_1)&#10;      (SID_NAME = SID2)&#10;    )&#10;  )</span><br></pre></td></tr></table></figure>
<h2 id="ORACLE启动监听器">ORACLE启动监听器</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#&#20999;&#25442;&#33267;oracle&#23433;&#35013;&#29992;&#25143;&#65288;&#19968;&#33324;&#20026;oracle&#65289;&#10;su - oracle &#10;#&#21551;&#21160;&#30417;&#21548;&#22120;&#10;lsnrctl start &#10;#&#20572;&#27490;&#30417;&#21548;&#22120;&#10;lsnrctl stop</span><br></pre></td></tr></table></figure>
<h2 id="启动测试oracle">启动测试oracle</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[oracle@oracle ~]$ sqlplus /nolog&#10;SQL*Plus: Release 11.2.0.1.0 Production on Fri Jul 27 02:12:12 2012&#10;Copyright (c) 1982, 2009, Oracle. All rights reserved.&#10;#&#20851;&#38381;&#25968;&#25454;&#24211;&#10;SQL&#62; shutdown&#10;#&#21551;&#21160;&#25968;&#25454;&#24211;&#10;SQL&#62; startup&#10;SQL&#62; quit</span><br></pre></td></tr></table></figure>
<p>测试的另一种方法：找一台windows平台电脑，telnet oracle主机IP地址：1521，通的话，会出现一个黑屏，光标一闪一闪。</p>
<h2 id="Linux开放1521端口允许网络连接Oracle_Listener">Linux开放1521端口允许网络连接Oracle Listener</h2><p>症状：<br>(1)TCP/IP连接是通的。可以用ping 命令测试。<br>(2)服务器上Oracle Listener已经启动。<br>lsnrctl status 查看listener状态<br>lsnrctl start 启动Oracle listener<br>(3)客户端得到的错误信息通常是：ORA-12170： TNS:连接超时<br>这时，我们基本可以肯定是服务器没有开放1521端口（假设你用默认设置）</p>
<p>解决方法：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#&#32534;&#36753;iptables, &#24320;&#25918;1521&#31471;&#21475;&#65306;&#10;vi /etc/sysconfig/iptables&#10;-A INPUT -p tcp -m state --state NEW -m tcp --dport 1521 -j ACCEPT &#10;&#10;#&#20445;&#23384;&#37197;&#32622;&#65292;&#20197;&#20415;linux&#37325;&#21551;&#21518;&#20381;&#28982;&#26377;&#25928;&#10;service iptables save &#10;#&#37325;&#21551;&#38450;&#28779;&#22681;,&#20351;&#35268;&#21017;&#29983;&#25928;&#10;service iptables restart&#10;#&#26597;&#30475;&#38450;&#28779;&#22681;&#35268;&#21017;&#65306;&#10;iptables -L &#8211;n</span><br></pre></td></tr></table></figure>
<h2 id="linux下创建oracle用户表空间">linux下创建oracle用户表空间</h2><p>就是在已有的数据库实例上创建一个新的帐号，访问一些新的表<br>操作步骤如下：<br>(1)登录linux，以oracle用户登录（如果是root用户登录的，登录后用 su - oracle命令切换成oracle用户）<br>(2)以sysdba方式来打开sqlplus，命令如下： </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlplus &#34;/as sysdba&#34;&#10;#&#20351;&#29992;sysdba&#25171;&#24320;&#21487;&#33021;&#20250;&#25253;ORA-12162&#38169;&#35823;&#65292;&#22240;&#20026;ORACLE_SID&#26410;&#23450;&#20041;&#10;export ORACLE_SID=dbmaster</span><br></pre></td></tr></table></figure>
<p>(3)查看我们常规将用户表空间放置位置：执行如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sql&#65306;select name from v$datafile;</span><br></pre></td></tr></table></figure>
<p>(4)创建用户表空间：<br>根据上步查询出的路径，新建用户表空间</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create tablespace ts_UserName datafile&#10;&#39;/data/dbdata/ewm/UserName_data01.dbf&#39; size 2G autoextend on next 100M maxsize 31g,&#10;&#39;/data/dbdata/ewm/UserName_data02.dbf&#39; size 2G autoextend on next 100M maxsize 31g,&#10;&#39;/data/dbdata/ewm/UserName_data03.dbf&#39; size 2G autoextend on next 100M maxsize 31g;</span><br></pre></td></tr></table></figure>
<p>(5)创建用户，指定密码和上边创建的用户表空间</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#&#27880;&#24847;&#65306;oracle&#26377;&#20010;&#27611;&#30149;&#65292;&#23494;&#30721;&#24517;&#39035;&#20197;&#23383;&#27597;&#24320;&#22836;&#65292;&#22914;&#26524;&#20197;&#25968;&#23383;&#24320;&#22836;&#65292;&#23427;&#19981;&#20250;&#21019;&#24314;&#29992;&#25143;&#10;create user UserName identified by PassWord default tablespace ts_UserName profile DEFAULT;</span><br></pre></td></tr></table></figure>
<p>(6)赋予权限</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant create database link to UserName;&#10;grant create procedure to UserName;&#10;grant create sequence to UserName;&#10;grant create session to UserName;&#10;grant create synonym to UserName;&#10;grant create table to UserName;&#10;grant create trigger to UserName;&#10;grant create view to UserName;&#10;grant select any dictionary to UserName;&#10;grant select any table to UserName;&#10;grant unlimited tablespace to UserName;&#10;grant update any table to UserName;&#10;grant debug connect session to UserName;&#10;grant dba to UserName;</span><br></pre></td></tr></table></figure>
<p>—经过以上操作，我们就可以使用UserName/PassWord登录指定的实例，创建我们自己的表了</p>
<h2 id="设置Oracle自启动">设置Oracle自启动</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su root&#10;vi /etc/oratab&#10;#&#23558;&#26411;&#23614;&#30340;N&#20462;&#25913;&#20026;Y&#10;dbmaster:/data/DBSoft/oracle/product/11.2.0/db_1:Y&#10;#&#20462;&#25913;linux&#33258;&#21551;&#21160;&#25991;&#20214;&#10;vi /etc/rc.d/rc.local&#10;su oracle -lc &#34;/data/DBSoft/oracle/product/11.2.0/db_1/bin/lsnrctl start&#34;&#10;&#10;su oracle -lc &#34;/data/DBSoft/oracle/product/11.2.0/db_1/bin/dbstart&#34;</span><br></pre></td></tr></table></figure>
<p>参考博客：<br> <a href="http://www.blogjava.net/icewee/archive/2013/01/30/394943.html" target="_blank" rel="external">Linux 64bit下Oracle11g安装手册</a><br> <a href="http://www.cnblogs.com/mophee/archive/2013/06/01/3107137.html" target="_blank" rel="external">亦步亦趋完成在CentOS 6.4下安装Oracle 11gR2</a><br> <a href="http://www.xiyang-liu.com/2012/11/install-oracle-dbserver-with-xmanager-in-windows/" target="_blank" rel="external">使用远程X Server安装Oracle</a><br> <a href="http://www.cnblogs.com/linjiqin/category/349944.html" target="_blank" rel="external">oracle初级系列教程</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="安装前准备">安装前准备</h1><h2 id="安装依赖包">安装依赖包</h2><p>oracle 安装所需程序包,可以到安装步骤时，查看缺少什么程序就安装什么程序</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">binutils-2.17.50.0.6&#10;compat-libstdc++-33-3.2.3&#10;compat-libstdc++-33-3.2.3 (32 bit)&#10;elfutils-libelf-0.125&#10;elfutils-libelf-devel-0.125&#10;gcc-4.1.2&#10;gcc-c++-4.1.2&#10;glibc-2.5-24&#10;glibc-2.5-24 (32 bit)&#10;glibc-common-2.5&#10;glibc-devel-2.5&#10;glibc-devel-2.5 (32 bit)&#10;glibc-headers-2.5&#10;ksh-20060214&#10;libaio-0.3.106&#10;libaio-0.3.106 (32 bit)&#10;libaio-devel-0.3.106&#10;libaio-devel-0.3.106 (32 bit)&#10;libgcc-4.1.2&#10;libgcc-4.1.2 (32 bit)&#10;libstdc++-4.1.2&#10;libstdc++-4.1.2 (32 bit)&#10;libstdc++-devel 4.1.2&#10;make-3.81&#10;sysstat-7.0.2&#10;unixODBC-2.2.14-11.el6 (x86_64) or later&#10;unixODBC-2.2.14-11.el6.i686 or later&#10;unixODBC-devel-2.2.14-11.el6 (x86_64) or later&#10;unixODBC-devel-2.2.14-11.el6.i686 or later&#10;libXp</span><br></pre></td></tr></table></figure>
<p>使用命令 yum install -y ‘package name’ 安装所缺的程序包，pdksh包除外</p>
<p>安装pdksh包，使用rz命令上传pdksh-5.2.14-37.el5_8.1.x86_64.rpm文件到/opt/目录下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># &#27880;&#24847;&#65306;&#35813;&#31243;&#24207;&#21253;&#19982;ksh&#20914;&#31361;&#65292;&#22914;&#26524;&#24050;&#32463;&#23433;&#35013;ksh&#65292;&#24314;&#35758;&#20351;&#29992;&#21629;&#20196; rpm -e ksh-* &#21368;&#36733;&#10;&#10;rpm -ivh pdksh-5.2.14-37.el5_8.1.x86_64.rpm</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="Oracle" scheme="http://www.mr-wang.cn/tags/Oracle/"/>
    
      <category term="技术" scheme="http://www.mr-wang.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[AMH重新编译Nginx，使其支持静态页面post]]></title>
    <link href="http://www.mr-wang.cn/2015/07/16/To-compile-Nginx-which-supports-static-post-pages/"/>
    <id>http://www.mr-wang.cn/2015/07/16/To-compile-Nginx-which-supports-static-post-pages/</id>
    <published>2015-07-16T12:26:27.000Z</published>
    <updated>2015-10-15T12:59:25.968Z</updated>
    <content type="html"><![CDATA[<p>在实际使用AMH的过程中，公司出现通过post请求静态页面；默认的nginx上，是拒绝通过post方式访问静态页面的。</p>
<p>网上有2种方法解决这个问题，但是在实际的过程中，发现方法1不奏效,于是使用方法2，重新编译nginx解决问题。</p>
<a id="more"></a>
<p>方法1：</p>
<p>修改nginc.conf配置文件，改变“405错误”为“200 ok”，并配置location来解决</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/nginx/conf/vhost/domain.com.conf</span><br></pre></td></tr></table></figure>
<p>添加：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">error_page 405 =200 @405;&#10;location @405&#10;&#123;&#10;    root /home/wwwroot/web/doamin.com;&#10;&#125;</span><br></pre></td></tr></table></figure>
<p>方法2：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /home/amh_install/&#10;wget http://code.amysql.com/files/nginx-1.4.4.tar.gz&#10;tar zxvf nginx-1.4.4.tar.gz&#10;cd nginx-1.4.4/src/http/modules/&#10;&#10;vi ngx_http_static_module.c&#10;#&#23558;&#36825;&#27573;&#23631;&#34109;&#25481;&#65307;&#10;/*&#10;if (r-&#62;method &#38; NGX_HTTP_POST) &#123;&#10;     return NGX_HTTP_NOT_ALLOWED;&#10;&#125;&#10;*/</span><br></pre></td></tr></table></figure>
<p>重新编译：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./configure &#8211;prefix=/usr/local/nginx &#8211;user=www &#8211;group=www &#8211;with-http_ssl_module &#8211;with-http_static_module &#8211;with-http_gzip_static_module &#8211;without-mail_pop3_module &#8211;without-mail_imap_module &#8211;without-mail_smtp_module &#8211;without-http_uwsgi_module &#8211;without-http_scgi_module&#10;make</span><br></pre></td></tr></table></figure>
<p>编译完成后不要再执行 make install，不然会把原有的配置文件覆盖，正确的方法是直接删除旧的，把新的复制过去后再执行make upgrade。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mv /usr/local/nginx/sbin/nginx /usr/local/nginx/sbin/nginx.bak&#10;cp ./objs/nginx /usr/local/nginx/sbin/&#10;make upgrade</span><br></pre></td></tr></table></figure>
<p>重载一下nginx</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/nginx reload</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>在实际使用AMH的过程中，公司出现通过post请求静态页面；默认的nginx上，是拒绝通过post方式访问静态页面的。</p>
<p>网上有2种方法解决这个问题，但是在实际的过程中，发现方法1不奏效,于是使用方法2，重新编译nginx解决问题。</p>]]>
    
    </summary>
    
      <category term="Nginx" scheme="http://www.mr-wang.cn/tags/Nginx/"/>
    
      <category term="技术" scheme="http://www.mr-wang.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CentOS下nginx安装]]></title>
    <link href="http://www.mr-wang.cn/2015/07/16/CentOS-nginx-installation/"/>
    <id>http://www.mr-wang.cn/2015/07/16/CentOS-nginx-installation/</id>
    <published>2015-07-16T12:26:27.000Z</published>
    <updated>2015-10-15T12:58:06.391Z</updated>
    <content type="html"><![CDATA[<p>1.最小化安装的CentOS没有安装gcc，首先安装gcc、g++和c++库；</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc-c++</span><br></pre></td></tr></table></figure>
<p>2.安装pcre库，pcre库是为了使nginx支持http rewrite模块；</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/&#10;wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.35.tar.gz&#10;tar -zxvf pcre-8.35.tar.gz&#10;cd pcre-8.35&#10;./configure&#10;make&#10;make install</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>3.安装nginx，选择 Nginx 安装到 /usr/local/nginx 目录下；</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/<span class="built_in">local</span>/</span><br><span class="line">wget http://nginx.org/download/nginx-<span class="number">1.2</span>.<span class="number">8</span>.tar.gz</span><br><span class="line">tar -zxvf nginx-<span class="number">1.6</span>.<span class="number">2</span>.tar.gz</span><br><span class="line"><span class="built_in">cd</span> nginx-<span class="number">1.6</span>.<span class="number">2</span></span><br><span class="line">./configure –prefix=/usr/<span class="built_in">local</span>/nginx –with-http_stub_status_module –with-http_gzip_static_module</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<p>–with-http_stub_status_module可以启动Nginx的NginxStatus功能，以监控Nginx的当前状态。</p>
<p>4.启动nginx 确保系统的 80 端口没被其他程序占用；</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>
<p>启动报错</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx: error while loading shared libraries: libpcre.so.1: cannot open shared object file: No such file or directory</span><br></pre></td></tr></table></figure>
<p>解决：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ls /lib/ |grep pcre&#10;libpcre.so.0&#10;libpcre.so.0.0.1&#10;#&#28155;&#21152;&#36719;&#36830;&#25509;&#10;ln -s /lib/libpcre.so.0.0.1 /lib/libpcre.so.1</span><br></pre></td></tr></table></figure>
<p>检查是否启动成功： netstat -ano|grep 80 有结果输入说明启动成功 打开浏览器访问此机器的 IP，如果浏览器出现 Welcome to nginx! 则表示 Nginx 已经安装并运行成功。</p>
<p>5./usr/local/nginx/config/nginx.conf配置文件详解：<br>Nginx的全局属性配置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#&#23450;&#20041;Nginx&#36816;&#34892;&#30340;&#29992;&#25143;&#21644;&#29992;&#25143;&#32452;&#10;user nobody nobody;&#10;#nginx&#36827;&#31243;&#25968;&#65292;&#24314;&#35758;&#35774;&#32622;&#20026;&#31561;&#20110;CPU&#24635;&#26680;&#24515;&#25968;&#12290;&#10;worker_processes 4;&#10;#&#20840;&#23616;&#38169;&#35823;&#26085;&#24535;&#23450;&#20041;&#31867;&#22411;&#65292;[ debug | info | notice | warn | error | crit ]&#65292;&#20854;&#20013;debug&#36755;&#20986;&#30340;&#26085;&#24535;&#26368;&#20026;&#35814;&#32454;&#65292;&#32780;crit&#36755;&#20986;&#26085;&#24535;&#26368;&#23569;&#10;error_log /var/log/nginx/error.log info;&#10;#&#36827;&#31243;&#25991;&#20214;&#65292;&#25351;&#23450;&#36827;&#31243;id&#30340;&#23384;&#20648;&#25991;&#20214;&#20301;&#32622;&#10;pid /var/run/nginx.pid;&#10;#&#19968;&#20010;nginx&#36827;&#31243;&#25171;&#24320;&#30340;&#26368;&#22810;&#25991;&#20214;&#25551;&#36848;&#31526;&#25968;&#30446;&#65292;&#29702;&#35770;&#20540;&#24212;&#35813;&#26159;&#26368;&#22810;&#25171;&#24320;&#25991;&#20214;&#25968;&#65288;&#31995;&#32479;&#30340;&#20540;ulimit -n&#65289;&#19982;nginx&#36827;&#31243;&#25968;&#30456;&#38500;&#65292;&#20294;&#26159;nginx&#20998;&#37197;&#35831;&#27714;&#24182;&#19981;&#22343;&#21248;&#65292;&#25152;&#20197;&#24314;&#35758;&#19982;ulimit -n&#30340;&#20540;&#20445;&#25345;&#19968;&#33268;&#12290;&#10;worker_rlimit_nofile 65535;&#10;#&#24037;&#20316;&#27169;&#24335;&#19982;&#36830;&#25509;&#25968;&#19978;&#38480;&#10;events&#10;&#123;&#10;# &#21442;&#32771;&#20107;&#20214;&#27169;&#22411;&#65292;use [ kqueue | rtsig | epoll | /dev/poll | select | poll ]; &#20854;&#20013;select&#21644;poll&#37117;&#26159;&#26631;&#20934;&#30340;&#24037;&#20316;&#27169;&#24335;&#65292;kqueue&#21644;epoll&#26159;&#39640;&#25928;&#30340;&#24037;&#20316;&#27169;&#24335;&#65292;&#19981;&#21516;&#30340;&#26159;epoll&#27169;&#22411;&#26159;Linux 2.6&#20197;&#19978;&#29256;&#26412;&#20869;&#26680;&#20013;&#30340;&#39640;&#24615;&#33021;&#32593;&#32476;I/O&#27169;&#22411;&#65292;&#22914;&#26524;&#36305;&#22312;FreeBSD&#19978;&#38754;&#65292;&#23601;&#29992;kqueue&#27169;&#22411;&#12290;&#10;use epoll;&#10;#&#21333;&#20010;&#36827;&#31243;&#26368;&#22823;&#36830;&#25509;&#25968;&#65288;&#26368;&#22823;&#36830;&#25509;&#25968;=&#36830;&#25509;&#25968;*&#36827;&#31243;&#25968;&#65289;&#10;worker_connections 65535;&#10;&#125;</span><br></pre></td></tr></table></figure>
<p>6.http服务器配置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http&#123;&#10;#&#35774;&#23450;mime&#31867;&#22411;,&#31867;&#22411;&#30001;mime.type&#25991;&#20214;&#23450;&#20041;&#10;include      conf/mime.types;&#10;default_type  application/octet-stream;&#10;#&#35774;&#23450;&#26085;&#24535;&#26684;&#24335;&#10;log_format main &#8216;$remote_addr &#8211; $remote_user [$time_local] &#8216;&#10; &#8216;&#8220;$request&#8221; $status $bytes_sent &#8216;&#10; &#8216;&#8220;$http_referer&#8221; &#8220;$http_user_agent&#8221; &#8216;&#10; &#8216;&#8220;$gzip_ratio&#8221;&#8216;;&#10; log_format download &#8216;$remote_addr &#8211; $remote_user [$time_local] &#8216;&#10; &#8216;&#8220;$request&#8221; $status $bytes_sent &#8216;&#10; &#8216;&#8220;$http_referer&#8221; &#8220;$http_user_agent&#8221; &#8216;&#10; &#8216;&#8220;$http_range&#8221; &#8220;$sent_http_content_range&#8221;&#8216;;&#10;#&#35774;&#32622;&#20801;&#35768;&#23458;&#25143;&#31471;&#35831;&#27714;&#30340;&#26368;&#22823;&#30340;&#21333;&#20010;&#25991;&#20214;&#23383;&#33410;&#25968;&#10;client_max_body_size  20m;&#10;#&#35774;&#32622;&#26469;&#33258;&#23458;&#25143;&#31471;&#35831;&#27714;&#22836;&#30340;headerbuffer&#22823;&#23567;&#65292;&#21363;&#32531;&#23384;&#21306;&#22823;&#23567;&#10;client_header_buffer_size    32K;&#10;#&#29992;&#26469;&#25351;&#23450;&#23458;&#25143;&#31471;&#35831;&#27714;&#20013;&#36739;&#22823;&#30340;&#28040;&#24687;&#22836;&#30340;&#32531;&#23384;&#26368;&#22823;&#25968;&#37327;&#21644;&#22823;&#23567;&#65292;4&#20026;&#20010;&#25968;&#65292;32k&#20026;&#22823;&#23567;&#65292;&#26368;&#22823;&#32531;&#23384;4&#20010;32K&#10;large_client_header_buffers  4 32k;&#10;#sendfile &#25351;&#20196;&#25351;&#23450; nginx &#26159;&#21542;&#35843;&#29992; sendfile &#20989;&#25968;&#65288;zero copy &#26041;&#24335;&#65289;&#26469;&#36755;&#20986;&#25991;&#20214;&#10;#&#23545;&#20110;&#26222;&#36890;&#24212;&#29992;&#65292;&#24517;&#39035;&#35774;&#20026; on,&#29992;&#26469;&#36827;&#34892;&#19979;&#36733;&#31561;&#24212;&#29992;&#30913;&#30424;IO&#37325;&#36127;&#36733;&#24212;&#29992;&#65292;&#21487;&#35774;&#32622;&#20026; off&#65292;&#20197;&#24179;&#34913;&#30913;&#30424;&#19982;&#32593;&#32476;I/O&#22788;&#29702;&#36895;&#24230;&#65292;&#38477;&#20302;&#31995;&#32479;&#30340;uptime.&#10;#tcp_nopush&#21644;tcp_nodely&#20004;&#20010;&#25351;&#20196;&#35774;&#32622;&#20026;on&#65292;&#29992;&#20110;&#38450;&#27490;&#32593;&#32476;&#38459;&#22622;&#10;Sendfile  on;&#10;tcp_nopush     on;&#10;tcp_nodelay    on;&#10;#&#29992;&#20110;&#35774;&#32622;&#23458;&#25143;&#31471;&#36830;&#25509;&#20445;&#25345;&#27963;&#21160;&#30340;&#36229;&#26102;&#26102;&#38388;&#65292;&#36229;&#36807;&#36825;&#20010;&#26102;&#38388;&#65292;&#26381;&#21153;&#22120;&#20250;&#20851;&#38381;&#35813;&#36830;&#25509;&#10;keepalive_timeout 60;&#10;#&#35774;&#32622;&#23458;&#25143;&#31471;&#35831;&#27714;&#22836;&#35835;&#21462;&#36229;&#26102;&#26102;&#38388;&#12290;&#22914;&#26524;&#36229;&#36807;&#36825;&#20010;&#26102;&#38388;&#65292;&#23458;&#25143;&#31471;&#36824;&#27809;&#26377;&#21457;&#36865;&#20219;&#20309;&#25968;&#25454;&#65292;Nginx&#23558;&#36820;&#22238;&#8220;Request time out&#65288;408&#65289;&#8221;&#38169;&#35823;&#10;client_header_timeout  10;&#10;#&#35774;&#32622;&#23458;&#25143;&#31471;&#35831;&#27714;&#20027;&#20307;&#35835;&#21462;&#36229;&#26102;&#26102;&#38388;&#12290;&#22914;&#26524;&#36229;&#36807;&#36825;&#20010;&#26102;&#38388;&#65292;&#23458;&#25143;&#31471;&#36824;&#27809;&#26377;&#21457;&#36865;&#20219;&#20309;&#25968;&#25454;&#65292;Nginx&#23558;&#36820;&#22238;&#8220;Request time out&#65288;408&#65289;&#8221;&#38169;&#35823;&#65292;&#40664;&#35748;&#20540;&#26159;60&#10;client_body_timeout    10;&#10;#&#25351;&#23450;&#21709;&#24212;&#23458;&#25143;&#31471;&#30340;&#36229;&#26102;&#26102;&#38388;&#12290;&#36825;&#20010;&#36229;&#26102;&#20165;&#38480;&#20110;&#20004;&#20010;&#36830;&#25509;&#27963;&#21160;&#20043;&#38388;&#30340;&#26102;&#38388;&#65292;&#22914;&#26524;&#36229;&#36807;&#36825;&#20010;&#26102;&#38388;&#65292;&#23458;&#25143;&#31471;&#27809;&#26377;&#20219;&#20309;&#27963;&#21160;&#65292;Nginx&#23558;&#20250;&#20851;&#38381;&#36830;&#25509;&#10;send_timeout          10;</span><br></pre></td></tr></table></figure>
<p>6.HttpGzip模块配置<br>下面配置Nginx的HttpGzip模块。这个模块支持在线实时压缩输出数据流。要查看是否安装了此模块，需要使用下面的命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/usr/local/nginx/sbin/nginx  -V&#10;nginx version: nginx/0.7.65&#10;configure arguments: &#8211;with-http_stub_status_module &#8211;with-http_gzip_static_module &#8211;prefix=/opt/nginx</span><br></pre></td></tr></table></figure>
<p>通过/usr/local/nginx/sbin/nginx -V命令可以查看安装Nginx时的编译选项，由输出可知，我们已经安装了HttpGzip模块。<br>下面是HttpGzip模块在Nginx配置中的相关属性设置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#&#29992;&#20110;&#35774;&#32622;&#24320;&#21551;&#25110;&#32773;&#20851;&#38381;gzip&#27169;&#22359;&#65292;&#8220;gzip on&#8221;&#34920;&#31034;&#24320;&#21551;GZIP&#21387;&#32553;&#65292;&#23454;&#26102;&#21387;&#32553;&#36755;&#20986;&#25968;&#25454;&#27969;&#10;gzip  on;&#10;#&#35774;&#32622;&#20801;&#35768;&#21387;&#32553;&#30340;&#39029;&#38754;&#26368;&#23567;&#23383;&#33410;&#25968;&#65292;&#39029;&#38754;&#23383;&#33410;&#25968;&#20174;header&#22836;&#30340;Content-Length&#20013;&#33719;&#21462;&#12290;&#40664;&#35748;&#20540;&#26159;0&#65292;&#19981;&#31649;&#39029;&#38754;&#22810;&#22823;&#37117;&#36827;&#34892;&#21387;&#32553;&#12290;&#24314;&#35758;&#35774;&#32622;&#25104;&#22823;&#20110;1K&#30340;&#23383;&#33410;&#25968;&#65292;&#23567;&#20110;1K&#21487;&#33021;&#20250;&#36234;&#21387;&#36234;&#22823;&#12290;&#10;gzip_min_length  1k;&#10;#&#34920;&#31034;&#30003;&#35831;4&#20010;&#21333;&#20301;&#20026;16K&#30340;&#20869;&#23384;&#20316;&#20026;&#21387;&#32553;&#32467;&#26524;&#27969;&#32531;&#23384;&#65292;&#40664;&#35748;&#20540;&#26159;&#30003;&#35831;&#19982;&#21407;&#22987;&#25968;&#25454;&#22823;&#23567;&#30456;&#21516;&#30340;&#20869;&#23384;&#31354;&#38388;&#26469;&#23384;&#20648;gzip&#21387;&#32553;&#32467;&#26524;&#12290;&#10;gzip_buffers     4  16k;&#10;#&#29992;&#20110;&#35774;&#32622;&#35782;&#21035;HTTP&#21327;&#35758;&#29256;&#26412;&#65292;&#40664;&#35748;&#26159;1.1&#65292;&#30446;&#21069;&#22823;&#37096;&#20998;&#27983;&#35272;&#22120;&#24050;&#32463;&#25903;&#25345;GZIP&#35299;&#21387;&#65292;&#20351;&#29992;&#40664;&#35748;&#21363;&#21487;&#10;gzip_http_version  1.1;&#10;#&#29992;&#26469;&#25351;&#23450;GZIP&#21387;&#32553;&#27604;&#65292;1 &#21387;&#32553;&#27604;&#26368;&#23567;&#65292;&#22788;&#29702;&#36895;&#24230;&#26368;&#24555;&#65307;9 &#21387;&#32553;&#27604;&#26368;&#22823;&#65292;&#20256;&#36755;&#36895;&#24230;&#24555;&#65292;&#20294;&#22788;&#29702;&#26368;&#24930;&#65292;&#20063;&#27604;&#36739;&#28040;&#32791;cpu&#36164;&#28304;&#10;gzip_comp_level  2;&#10;#&#29992;&#26469;&#25351;&#23450;&#21387;&#32553;&#30340;&#31867;&#22411;&#65292;&#26080;&#35770;&#26159;&#21542;&#25351;&#23450;&#65292;&#8220;text/html&#8221;&#31867;&#22411;&#24635;&#26159;&#20250;&#34987;&#21387;&#32553;&#30340;&#10;gzip_types  text/plain application/x-javascript text/css application/xml;&#10;#&#35753;&#21069;&#31471;&#30340;&#32531;&#23384;&#26381;&#21153;&#22120;&#32531;&#23384;&#32463;&#36807;GZIP&#21387;&#32553;&#30340;&#39029;&#38754;&#65292;&#20363;&#22914;&#29992;Squid&#32531;&#23384;&#32463;&#36807;Nginx&#21387;&#32553;&#30340;&#25968;&#25454;&#10;gzip_vary  on;</span><br></pre></td></tr></table></figure>
<p>7.StubStatus模块</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location /NginxStatus &#123;&#10;#stub_status&#20026;&#8220;on&#8221;&#34920;&#31034;&#21551;&#29992;StubStatus&#30340;&#24037;&#20316;&#26426;&#21046;&#10;stub_status      on;&#10;#access_log&#29992;&#26469;&#25351;&#23450;StubStatus&#27169;&#22359;&#30340;&#35775;&#38382;&#26085;&#24535;&#25991;&#20214;&#65292;&#8220;off&#8221;&#20026;&#20851;&#38381;&#65292;&#24320;&#21551;&#21152;&#36335;&#24452;&#10;access_log       off;&#10;#access_log       logs/NginxStatus.log;&#10;#&#35775;&#38382;&#25511;&#21046;&#10;allow    all;&#10;#auth_basic&#26159;Nginx&#30340;&#19968;&#31181;&#35748;&#35777;&#26426;&#21046;&#65292;auth_basic_user_file&#29992;&#26469;&#25351;&#23450;&#35748;&#35777;&#23494;&#30721;&#10;#auth_basic       &#8220;Nginxstatus&#8221;;&#10;#auth_basic_user_file   ../htpasswd;&#10;&#125;</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>1.最小化安装的CentOS没有安装gcc，首先安装gcc、g++和c++库；</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install gcc-c++</span><br></pre></td></tr></table></figure>
<p>2.安装pcre库，pcre库是为了使nginx支持http rewrite模块；</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/&#10;wget ftp://ftp.csx.cam.ac.uk/pub/software/programming/pcre/pcre-8.35.tar.gz&#10;tar -zxvf pcre-8.35.tar.gz&#10;cd pcre-8.35&#10;./configure&#10;make&#10;make install</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="Linux" scheme="http://www.mr-wang.cn/tags/Linux/"/>
    
      <category term="技术" scheme="http://www.mr-wang.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Vsftpd安装配置]]></title>
    <link href="http://www.mr-wang.cn/2015/07/16/Install-Vsftpd/"/>
    <id>http://www.mr-wang.cn/2015/07/16/Install-Vsftpd/</id>
    <published>2015-07-16T12:26:27.000Z</published>
    <updated>2015-07-16T12:43:28.081Z</updated>
    <content type="html"><![CDATA[<p>安装vsftp</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y vsftpd</span><br></pre></td></tr></table></figure>
<p>将vsftpd加入系统自启动，并启动服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service vsftpd start&#10;chkconfig --level 3 vsftpd on</span><br></pre></td></tr></table></figure>
<a id="more"></a> 
<p>配置文件：</p>
<p>/etc/vsftpd/vsftpd.conf   //主配置文件<br>/etc/vsftpd/ftpusers //被禁止登录FTP的用户文件<br>/etc/vsftpd/user_list    //允许登录FTP的用户文件<br>/etc/vsftpd/userconfig   //用户目录配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#&#21311;&#21517;&#36134;&#21495;&#26159;&#21542;&#20801;&#35768;&#30331;&#38470;&#10;#anonymous_enable=YES&#10; &#10;#&#35774;&#23450;&#26412;&#22320;&#29992;&#25143;&#21487;&#20197;&#35775;&#38382;&#12290;&#27880;&#65306;&#22914;&#20351;&#29992;&#34394;&#25311;&#23487;&#20027;&#29992;&#25143;&#65292;&#22312;&#35813;&#39033;&#30446;&#35774;&#23450;&#20026;NO&#30340;&#24773;&#20917;&#19979;&#25152;&#26377;&#34394;&#25311;&#29992;&#25143;&#23558;&#26080;&#27861;&#35775;&#38382;&#12290;&#10;local_enable=YES&#10; &#10;#&#20351;&#29992;&#25143;&#19981;&#33021;&#31163;&#24320;&#20027;&#30446;&#24405;&#10;#chroot_local_user=YES&#10; &#10;#&#26159;&#21542;&#21487;&#20197;&#20889;&#20837;&#10;write_enable=YES&#10; &#10;# Default umask for local users is 077. You may wish to change this to 022,&#10;# if your users expect that (022 is used by most other ftpd&#39;s)&#10;#&#35774;&#23450;&#19978;&#20256;&#21518;&#25991;&#20214;&#30340;&#26435;&#38480;&#25513;&#30721;&#10;local_umask=022&#10;#&#10;# Uncomment this to allow the anonymous FTP user to upload files. This only&#10;# has an effect if the above global write enable is activated. Also, you will&#10;# obviously need to create a directory writable by the FTP user.&#10;#&#21311;&#21517;&#29992;&#25143;&#26159;&#21542;&#21487;&#20197;&#19978;&#20256;&#10;#anon_upload_enable=YES&#10;anon_upload_enable=NO&#10;#&#10;# Uncomment this if you want the anonymous FTP user to be able to create&#10;# new directories.&#10;#&#21311;&#21517;&#29992;&#25143;&#26159;&#21542;&#21487;&#20197;&#24314;&#31435;&#30446;&#24405;&#10;#anon_mkdir_write_enable=YES&#10;anon_mkdir_write_enable=NO&#10;#&#10;# Activate directory messages - messages given to remote users when they&#10;# go into a certain directory.&#10;#&#36827;&#20837;&#27599;&#20010;&#30446;&#24405;&#26159;&#21542;&#26174;&#31034;&#27426;&#36814;&#20449;&#24687;&#65292;&#22312;&#27599;&#20010;&#30446;&#24405;&#19979;&#24314;&#31435;.message&#25991;&#20214;&#22312;&#37324;&#38754;&#20889;&#27426;&#36814;&#20449;&#24687;&#10;dirmessage_enable=YES&#10;#&#10;# The target log file can be vsftpd_log_file or xferlog_file.&#10;# This depends on setting xferlog_std_format parameter&#10;#&#19978;&#20256;/&#19979;&#36733;&#25991;&#20214;&#26102;&#26159;&#21542;&#35760;&#24405;&#26085;&#24535;&#10;xferlog_enable=YES&#10;#&#10;# Make sure PORT transfer connections originate from port 20 (ftp-data).&#10;#&#26159;&#21542;&#20351;&#29992;port&#20027;&#21160;&#27169;&#24335;&#10;port_enable=YES&#10;#&#26159;&#21542;&#20351;&#29992;20&#31471;&#21475;&#20256;&#36755;&#25968;&#25454;&#10;connect_from_port_20=YES&#10;#&#19981;&#20351;&#29992;20&#31471;&#21475;&#26102;&#65292;&#25351;&#23450;port&#27169;&#24335;&#30340;&#31471;&#21475;&#21495;&#10;#ftp_data_port=2020&#10;#&#26159;&#21542;&#20351;&#29992;&#23433;&#20840;&#30340;port&#27169;&#24335;&#10;port_promiscuous=NO&#10;#&#10;# If you want, you can arrange for uploaded anonymous files to be owned by&#10;# a different user. Note! Using &#34;root&#34; for uploaded files is not&#10;# recommended!&#10;#&#21311;&#21517;&#29992;&#25143;&#19978;&#20256;&#25991;&#20214;&#26159;&#21542;&#26356;&#25913;&#23487;&#20027;&#10;#chown_uploads=YES&#10;#&#21311;&#21517;&#29992;&#25143;&#19978;&#20256;&#25991;&#20214;&#23487;&#20027;&#26356;&#25913;&#20026;&#35841;&#10;#chown_username=whoever&#10;#&#10;# The name of log file when xferlog_enable=YES and xferlog_std_format=YES&#10;# WARNING - changing this filename affects /etc/logrotate.d/vsftpd.log&#10;#&#35774;&#23450;Vsftpd&#30340;&#26381;&#21153;&#26085;&#24535;&#20445;&#23384;&#36335;&#24452;&#65292;&#38656;&#25163;&#21160;&#21019;&#24314;&#35813;&#25991;&#20214;&#24182;&#26377;&#20889;&#20837;&#26435;&#38480;&#10;xferlog_file=/var/log/xferlog&#10;#&#10;# Switches between logging into vsftpd_log_file and xferlog_file files.&#10;# NO writes to vsftpd_log_file, YES to xferlog_file&#10;#&#35774;&#23450;&#26085;&#24535;&#20351;&#29992;&#26631;&#20934;&#30340;&#35760;&#24405;&#26684;&#24335;&#10;xferlog_std_format=YES&#10;#&#10;# You may change the default value for timing out an idle session.&#10;#&#35774;&#23450;&#31354;&#38386;&#36830;&#25509;&#36229;&#26102;&#26102;&#38388;&#65292;&#22914;&#26524;&#19981;&#25351;&#23450;&#30340;&#35805;&#65292;&#36824;&#26159;&#20351;&#29992;&#36825;&#37324;&#30340;&#40664;&#35748;&#20540;600&#65292;&#21333;&#20301;&#31186;&#10;#idle_session_timeout=600&#10;#&#10;# You may change the default value for timing out a data connection.&#10;#&#35774;&#23450;&#21333;&#27425;&#26368;&#22823;&#36830;&#32493;&#20256;&#36755;&#26102;&#38388;&#65292;&#22914;&#26524;&#19981;&#25351;&#23450;&#30340;&#35805;&#65292;&#36824;&#26159;&#20351;&#29992;&#36825;&#37324;&#30340;&#40664;&#35748;&#20540;120&#65292;&#21333;&#20301;&#31186;&#10;#data_connection_timeout=120&#10;#&#10;# It is recommended that you define on your system a unique user which the&#10;# ftp server can use as a totally isolated and unprivileged user.&#10;#&#35774;&#23450;&#25903;&#25745;Vsftpd&#26381;&#21153;&#30340;&#23487;&#20027;&#29992;&#25143;&#10;#nopriv_user=ftpsecure&#10;#&#10;# Enable this and the server will recognise asynchronous ABOR requests. Not&#10;# recommended for security (the code is non-trivial). Not enabling it,&#10;# however, may confuse older FTP clients.&#10;#&#35774;&#23450;&#26159;&#21542;&#25903;&#25345;&#24322;&#27493;&#20256;&#36755;&#21151;&#33021;&#10;#async_abor_enable=YES&#10;#&#10;# By default the server will pretend to allow ASCII mode but in fact ignore&#10;# the request. Turn on the below options to have the server actually do ASCII&#10;# mangling on files when in ASCII mode.&#10;# Beware that on some FTP servers, ASCII support allows a denial of service&#10;# attack (DoS) via the command &#34;SIZE /big/file&#34; in ASCII mode. vsftpd&#10;# predicted this attack and has always been safe, reporting the size of the&#10;# raw file.&#10;# ASCII mangling is a horrible feature of the protocol.&#10;#&#35774;&#23450;&#25903;&#25345;ASCII&#27169;&#24335;&#30340;&#19978;&#20256;&#21644;&#19979;&#36733;&#21151;&#33021;&#10;ascii_upload_enable=YES&#10;ascii_download_enable=YES&#10; &#10;# You may fully customise the login banner string:&#10;#&#35774;&#23450;Vsftpd&#30340;&#30331;&#38470;&#26631;&#35821;&#10;#ftpd_banner=Welcome to blah FTP service.&#10;#&#10;# You may specify a file of disallowed anonymous e-mail addresses. Apparently&#10;# useful for combatting certain DoS attacks.&#10;#deny_email_enable=YES&#10;# (default follows)&#10;#banned_email_file=/etc/vsftpd/banned_emails&#10;#&#10;# You may specify an explicit list of local users to chroot() to their home&#10;# directory. If chroot_local_user is YES, then this list becomes a list of&#10;# users to NOT chroot().&#10;#&#26159;&#21542;&#38480;&#21046;&#25152;&#26377;&#30340;&#26412;&#22320;&#29992;&#25143;&#22312;&#33258;&#23478;&#30446;&#24405;&#10;#chroot_local_user=YES&#10;#&#26159;&#21542;&#20801;&#35768;chroot_list&#20013;&#29992;&#25143;&#30331;&#20986;&#33258;&#24049;&#30340;FTP&#20027;&#30446;&#24405;&#10;#chroot_list_enable=YES&#10;# (default follows)&#10;#&#37197;&#32622;chroot_list&#25991;&#20214;&#36335;&#24452;&#10;#chroot_list_file=/etc/vsftpd/chroot_list&#10;#&#10;# You may activate the &#34;-R&#34; option to the builtin ls. This is disabled by&#10;# default to avoid remote users being able to cause excessive I/O on large&#10;# sites. However, some broken FTP clients such as &#34;ncftp&#34; and &#34;mirror&#34; assume&#10;# the presence of the &#34;-R&#34; option, so there is a strong case for enabling it.&#10;#&#26159;&#21542;&#20801;&#35768;&#20351;&#29992;ls -R&#21629;&#20196;&#65292;&#35813;&#21629;&#20196;&#20250;&#23545;&#26381;&#21153;&#22120;&#24615;&#33021;&#36896;&#25104;&#24040;&#22823;&#24320;&#38144;&#10;#ls_recurse_enable=YES&#10;#&#10;# When &#34;listen&#34; directive is enabled, vsftpd runs in standalone mode and&#10;# listens on IPv4 sockets. This directive cannot be used in conjunction&#10;# with the listen_ipv6 directive.&#10;#&#24320;&#21551;ipv4&#30417;&#21548;&#10;listen=YES&#10;#&#35774;&#23450;ipv4&#30417;&#21548;&#31471;&#21475;&#10;listen_port=2121&#10;#&#10;# This directive enables listening on IPv6 sockets. To listen on IPv4 and IPv6&#10;# sockets, you must run two copies of vsftpd with two configuration files.&#10;# Make sure, that one of the listen options is commented !!&#10;#&#24320;&#21551;ipv6&#30417;&#21548;&#10;#listen_ipv6=YES&#10; &#10;#&#20351;&#29992;pam&#27169;&#22359;&#25511;&#21046;&#65292;vsftpd&#25991;&#20214;&#22312;/etc/pam.d&#30446;&#24405;&#19979;&#10;pam_service_name=vsftpd&#10; &#10;#userlist_enable&#12289;userlist_deny&#37197;&#21512;&#20351;&#29992;&#65292;userlist_enable&#36873;&#39033;&#34987;&#28608;&#27963;&#21518;&#65292;vsftpd&#23558;&#35835;&#21462;userlist_file&#21442;&#25968;&#25152;&#25351;&#23450;&#30340;&#25991;&#20214;&#20013;&#30340;&#29992;&#25143;&#21015;&#34920;&#65292;&#32780;userlist_deny&#36873;&#39033;&#23450;&#20041;list&#20013;&#29992;&#25143;&#26159;&#21542;&#34987;&#31105;&#27490;&#30331;&#38470;&#12290;&#24403;&#21015;&#34920;&#20013;&#30340;&#29992;&#25143;&#30331;&#24405;FTP&#26381;&#21153;&#22120;&#26102;&#65292;&#35813;&#29992;&#25143;&#22312;&#25552;&#31034;&#36755;&#20837;&#23494;&#30721;&#20043;&#21069;&#23601;&#34987;&#31105;&#27490;&#20102;&#12290;&#21363;&#35813;&#29992;&#25143;&#21517;&#36755;&#20837;&#21518;&#65292;vsftpd&#26597;&#21040;&#35813;&#29992;&#25143;&#21517;&#22312;&#21015;&#34920;&#20013;&#65292;vsftpd&#23601;&#30452;&#25509;&#31105;&#27490;&#25481;&#35813;&#29992;&#25143;&#65292;&#19981;&#20250;&#20877;&#36827;&#34892;&#35810;&#38382;&#23494;&#30721;&#31561;&#21518;&#32493;&#27493;&#32858;&#10;#userlist_enable=YES&#10;#userlist_file=/etc/vsftpd/vsftpd.user_list&#10;#userlist_deny=YES&#10; &#10;#&#26159;&#21542;&#20801;&#35768;tcp_wrappers&#31649;&#29702;&#10;tcp_wrappers=YES&#10; &#10;#&#25152;&#26377;&#29992;&#25143;&#30340;&#26681;&#30446;&#24405;&#65292;&#65292;&#23545;&#21311;&#21517;&#29992;&#25143;&#26080;&#25928;&#10;#local_root=/home/ftp&#10; &#10;#&#21311;&#21517;&#29992;&#25143;&#30340;&#26368;&#22823;&#20256;&#36755;&#36895;&#24230;&#65292;&#21333;&#20301;&#26159;Byts/s&#10;#anon_max_rate=1024000&#10; &#10;#&#26412;&#22320;&#29992;&#25143;&#30340;&#26368;&#22823;&#20256;&#36755;&#36895;&#24230;&#65292;&#21333;&#20301;&#26159;Byts/s&#10;#local_max_rate=1024000&#10; &#10;#&#26159;&#21542;&#20351;&#29992;pasv&#34987;&#21160;&#27169;&#24335;&#10;pasv_enable=YES&#10;#&#25351;&#23450;&#34987;&#21160;&#27169;&#24335;&#30340;&#26368;&#23567;&#12289;&#26368;&#22823;&#31471;&#21475;&#10;pasv_min_port=2123&#10;pasv_max_port=2125&#10;#&#26159;&#21542;&#23631;&#34109;&#23545;pasv&#36827;&#34892;&#23433;&#20840;&#26816;&#26597;&#10;pasv_promiscuous=NO&#10;#&#34987;&#21160;&#27169;&#24335;&#26159;&#21542;&#29992;&#35774;&#32622;&#22909;&#30340;&#30340;&#22320;&#22336;&#36820;&#22238;&#32473;&#23458;&#25143;&#31471;&#10;#pasv_addr_resolve=YES&#10;#&#26381;&#21153;&#22120;&#20256;&#22238;&#30340;ip&#22320;&#22336;&#65292;&#35753;&#23458;&#25143;&#31471;&#30693;&#36947;&#10;#pasv_address=101.71.51.65</span><br></pre></td></tr></table></figure>
<p><a href="http://heylinux.com/archives/356.html" target="_blank" rel="external">基于本地用户的Vsftp配置</a><br><a href="http://heylinux.com/archives/713.html" target="_blank" rel="external">Vsftp服务器配置详解</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<p>安装vsftp</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y vsftpd</span><br></pre></td></tr></table></figure>
<p>将vsftpd加入系统自启动，并启动服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">service vsftpd start&#10;chkconfig --level 3 vsftpd on</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="vsftp,ftp" scheme="http://www.mr-wang.cn/tags/vsftp-ftp/"/>
    
      <category term="技术" scheme="http://www.mr-wang.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Linux Shell]]></title>
    <link href="http://www.mr-wang.cn/2015/07/16/Shell-Study/"/>
    <id>http://www.mr-wang.cn/2015/07/16/Shell-Study/</id>
    <published>2015-07-16T12:26:27.000Z</published>
    <updated>2015-10-15T12:57:58.251Z</updated>
    <content type="html"><![CDATA[<h1 id="Shell_学习">Shell 学习</h1><h2 id="Shell_删除系统日志">Shell 删除系统日志</h2><p>第一种：</p>
<pre><code><span class="shebang">#!/bin/sh</span>
<span class="built_in">cd</span> /var/<span class="built_in">log</span>
cat /dev/null &gt; messages
<span class="built_in">echo</span> <span class="string">"Logs cleaned up"</span>
</code></pre><p>缺陷：</p>
<ol>
<li>非root用户无法删除；</li>
<li>未定义变量。</li>
</ol>
<hr>
<a id="more"></a>
<p>第二种：<br>带有流程控制及变量的Shell</p>
<pre><code><span class="comment"># 定义日志目录</span>
Log_Dir=/var/<span class="built_in">log</span>
<span class="comment"># 定义root的UID</span>
Root_UID=<span class="number">0</span>

<span class="comment"># 判断当前用户是否为root</span>
<span class="keyword">if</span> [ <span class="variable">$UID</span> != <span class="variable">$Root_UID</span> ]
<span class="keyword">then</span>
        <span class="built_in">echo</span> <span class="string">"You must be root to run the script"</span>
<span class="keyword">else</span>
        <span class="built_in">cd</span> <span class="variable">$Log_Dir</span> || {
        <span class="built_in">echo</span> <span class="variable">$Log_Dir</span> <span class="string">"is not directory!"</span>
}
<span class="keyword">fi</span>

<span class="comment"># 删除系统日志</span>
<span class="keyword">if</span> [ <span class="operator">-s</span> messages ]
<span class="keyword">then</span>
        cat /dev/null &gt; messages
        <span class="built_in">echo</span> <span class="string">"Logs cleaned up!"</span>
<span class="keyword">else</span>
        <span class="built_in">echo</span> <span class="string">"Logfile is empty!"</span>
<span class="keyword">fi</span>
</code></pre><h2 id="FTP_web数据备份">FTP web数据备份</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash&#10;&#10;#&#36825;&#37324;&#38656;&#35201;&#24744;&#20462;&#25913;&#19979;&#10;FTP_USER=admin                       #&#20320;&#30340;&#19978;&#20256;ftp&#29992;&#25143;&#21517;&#10;FTP_PASS=123                         #&#20320;&#30340;&#19978;&#20256;ftp&#23494;&#30721;&#10;FTP_IP=188.188.0.25                  #&#20320;&#19978;&#20256;ftp&#30340;&#22320;&#22336;&#10;FTP_backup=backup                    #ftp&#19978;&#23384;&#25918;&#22791;&#20221;&#25991;&#20214;&#30340;&#30446;&#24405;(ftp&#20027;&#30446;&#24405;&#21363;&#20026;&#31354;)&#10;#MAIL_TO=suwubee@gmail.com           #&#25968;&#25454;&#24211;&#21457;&#36865;&#21040;&#30340;&#37038;&#31665;&#65292;&#22914;&#38656;&#20351;&#29992;&#35831;&#20808;&#23433;&#35013;mutt&#24182;&#21435;&#25481;&#27880;&#37322;&#10;WEB_DATA=/www/web                    #&#35201;&#22791;&#20221;&#30340;&#32593;&#31449;&#25968;&#25454;&#10;mysql_DATA=/www/wdlinux/mysql/var    #&#35201;&#22791;&#20221;&#30340;&#25968;&#25454;&#24211;&#30446;&#24405;&#10;&#10;#&#19979;&#38754;&#19968;&#33324;&#21487;&#20197;&#40664;&#35748;&#10;&#10;#&#23450;&#20041;&#25968;&#25454;&#24211;&#30340;&#21517;&#23383;&#21644;&#26087;&#25968;&#25454;&#24211;&#30340;&#21517;&#23383;&#10;DataBakName=Data_$(date +&#34;%Y%m%d&#34;).tar.gz&#10;WebBakName=Web_$(date +%Y%m%d).tar.gz&#10;OldData=Data_$(date -d -5day +&#34;%Y%m%d&#34;).tar.gz&#10;OldWeb=Web_$(date -d -5day +&#34;%Y%m%d&#34;).tar.gz&#10;&#10;#&#20197;&#19978;&#30340;-5day&#21363;&#26368;&#19979;&#38754;&#30340;&#21024;&#38500;ftp&#31354;&#38388;&#20013;5&#22825;&#21069;&#30340;&#25968;&#25454;&#65292;&#21487;&#33258;&#23450;&#20041;&#12290;&#10;&#10;#&#21024;&#38500;&#26412;&#22320;1&#22825;&#21069;&#30340;&#25968;&#25454;&#10;rm -rf /www/backup/Data_$(date -d -1day +&#34;%Y%m%d&#34;).tar.gz /www/backup/Web_$(date -d -1day +&#34;%Y%m%d&#34;).tar.gz &#10;&#10;#&#20320;&#21487;&#20197;&#20462;&#25913;1&#20026;&#20854;&#20182;&#25968;&#23383;&#65292;&#21363;&#33258;&#23450;&#20041;&#21024;&#38500;&#20960;&#22825;&#21069;&#30340;&#25968;&#25454;&#10;&#10;cd /www/backup&#10;&#10;#&#20572;&#27490;mysql&#65292;&#26159;&#20026;&#20102;&#38450;&#27490;&#25968;&#25454;&#35835;&#21462;&#36807;&#31243;&#20013;&#22791;&#20221;&#20986;&#38169;&#10;service mysql stop&#10;&#10;#&#25171;&#21253;mysql&#30446;&#24405;&#10;cd $mysql_DATA&#10;tar zcf /www/backup/$DataBakName ./*&#10;&#10;#&#36816;&#34892;mysql&#10;service mysql start&#10;&#10;#&#21387;&#32553;&#32593;&#31449;&#25968;&#25454;&#10;cd $WEB_DATA&#10;tar zcf /www/backup/$WebBakName ./*&#10;&#10;#&#22914;&#26524;&#38656;&#35201;&#23558;&#25968;&#25454;&#24211;&#22791;&#20221;&#21040;&#37038;&#31665;&#65292;&#35831;&#21435;&#25481;&#21069;&#38754;&#27880;&#37322;&#65292;&#22914;&#26524;&#25968;&#25454;&#24211;&#36807;&#22823;&#65292;&#19981;&#24314;&#35758;&#20351;&#29992;&#27492;&#21151;&#33021;&#10;#echo &#34;&#20027;&#39064;:&#25968;&#25454;&#24211;&#22791;&#20221;&#34; | mutt -a /home/backup/$DataBakName -s &#34;&#20869;&#23481;:&#25968;&#25454;&#24211;&#22791;&#20221;&#34; $MAIL_TO&#10;&#10;#&#19978;&#20256;&#21040;FTP&#31354;&#38388;,&#21024;&#38500;FTP&#31354;&#38388;5&#22825;&#21069;&#30340;&#25968;&#25454;&#10;cd /www/backup &#10;lftp $FTP_IP 21 -u $FTP_USER,$FTP_PASS &#60;&#60; EOF&#10;cd $FTP_backup&#10;mrm $OldData&#10;mrm $OldWeb&#10;mput $DataBakName&#10;mput $WebBakName&#10;bye&#10;EOF</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h1 id="Shell_学习">Shell 学习</h1><h2 id="Shell_删除系统日志">Shell 删除系统日志</h2><p>第一种：</p>
<pre><code><span class="shebang">#!/bin/sh</span>
<span class="built_in">cd</span> /var/<span class="built_in">log</span>
cat /dev/null &gt; messages
<span class="built_in">echo</span> <span class="string">"Logs cleaned up"</span>
</code></pre><p>缺陷：</p>
<ol>
<li>非root用户无法删除；</li>
<li>未定义变量。</li>
</ol>
<hr>]]>
    
    </summary>
    
      <category term="Linux" scheme="http://www.mr-wang.cn/tags/Linux/"/>
    
      <category term="资源" scheme="http://www.mr-wang.cn/categories/%E8%B5%84%E6%BA%90/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[linux的运行级别及自启动程序]]></title>
    <link href="http://www.mr-wang.cn/2015/07/16/Linux-Boot-Sequence/"/>
    <id>http://www.mr-wang.cn/2015/07/16/Linux-Boot-Sequence/</id>
    <published>2015-07-16T12:26:27.000Z</published>
    <updated>2015-10-15T12:57:29.993Z</updated>
    <content type="html"><![CDATA[<h2 id="Linux运行级别：">Linux运行级别：</h2><p>Linux运行级别有七种：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 - &#20572;&#26426;&#65288;&#21315;&#19975;&#19981;&#33021;&#25226;initdefault &#35774;&#32622;&#20026;0 &#65289;&#10;1 - &#21333;&#29992;&#25143;&#27169;&#24335;&#10;2 - &#22810;&#29992;&#25143;&#65292;&#27809;&#26377; NFS&#10;3 - &#23436;&#20840;&#22810;&#29992;&#25143;&#27169;&#24335;(&#26631;&#20934;&#30340;&#36816;&#34892;&#32423;)&#10;4 - &#27809;&#26377;&#29992;&#21040;&#10;5 - X11 &#65288;xwindow)&#10;6 - &#37325;&#26032;&#21551;&#21160; &#65288;&#21315;&#19975;&#19981;&#35201;&#25226;initdefault &#35774;&#32622;&#20026;6 &#65289;</span><br></pre></td></tr></table></figure>
<p>默认的运行级别在/etc/inittab文件中进行设置。</p>
<a id="more"></a>
<h2 id="加载开机启动程序">加载开机启动程序</h2><p>Linux系统启动确定运行级别后，加载运行级别下的自启动程序。</p>
<p>那么不同运行级别的，自启动程序不同，对应的启动程序目录也不同。如果需要查看3级别用户的启动程序，可以通过/etc/rc3.d 目录来查看。</p>
<p>目录名中的”rc”，表示run command（运行程序），最后的d表示directory（目录）。<br>下面让我们看看 /etc/rc3.d, 目录中到底指定了哪些程序</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dbserver etc]# ls /etc/rc3.d/&#10;K01numad K01smartd K02oddjobd&#10;S01sysstat S02lvm2-monitor S08iptables&#10;...</span><br></pre></td></tr></table></figure>
<p>从目录名，我们可以看出，目录均是以“字母K或S+2位数字+程序名”的形式。<br>字母K表示：kill，从其他运行级别切换到这一级别时，需要关闭的程序。<br>字母S表示：start，需要启动的程序。<br>数字表示：表示处理顺序，数字越小，处理得越早。数字相同时，按照程序首字母顺序启动。</p>
<p>前面提到，不同运行级别的，自启动程序不同，对应的启动程序目录也不同。不难想到，如果多个”运行级别”需要启动同一个程序，那么这个程序的启动脚本，就会在每一个目录里都有一个拷贝。</p>
<p>这样会造成管理上的困扰：如果要修改启动脚本，岂不是每个目录都要改一遍？</p>
<p>Linux的解决办法，就是七个 /etc/rcN.d 目录里列出的程序，都设为链接文件，指向另外一个目录 /etc/init.d ，真正的启动脚本都统一放在这个目录中。init进程逐一加载开机启动程序，其实就是运行这个目录里的启动脚本。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dbserver rc3.d]# ll /etc/rc3.d/&#10;&#24635;&#29992;&#37327; 0&#10;lrwxrwxrwx. 1 root root 15 3&#26376;  25 17:30 K01numad -&#62; ../init.d/numad&#10;lrwxrwxrwx. 1 root root 16 3&#26376;  25 17:30 K01smartd -&#62; ../init.d/smartd&#10;lrwxrwxrwx. 1 root root 17 3&#26376;  25 17:27 K02oddjobd -&#62; ../init.d/oddjobd&#10;lrwxrwxrwx. 1 root root 16 3&#26376;  25 17:31 K10psacct -&#62; ../init.d/psacct&#10;lrwxrwxrwx. 1 root root 19 3&#26376;  25 17:27 K10saslauthd -&#62; ../init.d/saslauthd&#10;lrwxrwxrwx. 1 root root 20 3&#26376;  25 17:25 K50netconsole -&#62; ../init.d/netconsole&#10;lrwxrwxrwx. 1 root root 13 3&#26376;  25 17:26 K60nfs -&#62; ../init.d/nfs</span><br></pre></td></tr></table></figure>
<p>再看看链接指向的init.d文件，发现还是一个链接文件。所以最终的脚本文件在/etc/rc.d/init.d</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root@dbserver etc]# ll /etc/init.d&#10;lrwxrwxrwx. 1 root root 11 3&#26376;  25 17:15 init.d -&#62; rc.d/init.d</span><br></pre></td></tr></table></figure>
<p>链接文件目录：/etc/rcN.d<br>程序脚本文件目录：/etc/rc.d/init.d<br>用户自定义脚本：/etc/rc.d/init.d/rc.local</p>
<h2 id="Shell配置文件">Shell配置文件</h2><p>Shell的配置文件有如下五个：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/profile&#10;/etc/bashrc&#10;~/.bash_profile&#10;~/.bash_loginout&#10;~/.bashrc</span><br></pre></td></tr></table></figure></p>
<p>他们之间的区别：<br><code>/etc/profile</code> 这是对所有用户都有效的配置，文件修改后，需要source生效重启；<br><code>~/.bash_profile</code> 这是对当前用户有效的配置，文件修改后，需要source生效或重启；<br><code>/etc/bashrc</code> 桌面状态下，打开一个不需要登陆的Shell时调用，对所有用户都有效，文件修改后，重新打开一个Shell就生效；<br><code>~/.bashrc</code> 桌面状态下，打开一个不需要登陆的Shell时调用，对当前用户有效，文件修改后，重新打开一个Shell就生效；<br><code>~/.bash_loginout</code> 当每次退出系统(退出bash shell)时,执行该文件。</p>
<p>参考<br><a href="http://blog.csdn.net/firedb/article/details/8205136" target="_blank" rel="external">linux /etc/rc.d/init.d自启动程序说明</a><br><a href="http://www.ruanyifeng.com/blog/2013/08/linux_boot_process.html" target="_blank" rel="external">Linux系统的启动流程</a><br><a href="http://blog.csdn.net/lxlj2006/article/details/5828705" target="_blank" rel="external">系统运行级别(/etc/inittab)</a></p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="Linux运行级别：">Linux运行级别：</h2><p>Linux运行级别有七种：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 - &#20572;&#26426;&#65288;&#21315;&#19975;&#19981;&#33021;&#25226;initdefault &#35774;&#32622;&#20026;0 &#65289;&#10;1 - &#21333;&#29992;&#25143;&#27169;&#24335;&#10;2 - &#22810;&#29992;&#25143;&#65292;&#27809;&#26377; NFS&#10;3 - &#23436;&#20840;&#22810;&#29992;&#25143;&#27169;&#24335;(&#26631;&#20934;&#30340;&#36816;&#34892;&#32423;)&#10;4 - &#27809;&#26377;&#29992;&#21040;&#10;5 - X11 &#65288;xwindow)&#10;6 - &#37325;&#26032;&#21551;&#21160; &#65288;&#21315;&#19975;&#19981;&#35201;&#25226;initdefault &#35774;&#32622;&#20026;6 &#65289;</span><br></pre></td></tr></table></figure>
<p>默认的运行级别在/etc/inittab文件中进行设置。</p>]]>
    
    </summary>
    
      <category term="Linux" scheme="http://www.mr-wang.cn/tags/Linux/"/>
    
      <category term="技术" scheme="http://www.mr-wang.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Netbois协议导致网络阻塞]]></title>
    <link href="http://www.mr-wang.cn/2015/07/11/Netbois-protocol-leads-to-network-congestion/"/>
    <id>http://www.mr-wang.cn/2015/07/11/Netbois-protocol-leads-to-network-congestion/</id>
    <published>2015-07-11T12:26:27.000Z</published>
    <updated>2015-10-15T12:57:18.428Z</updated>
    <content type="html"><![CDATA[<p>办公室有台电脑，经常导致办公室网络中断。使用抓包工具分析，该电脑在网络组始终在使用Netbois协议进行域名查询，导致网络阻塞。</p>
<p>在网上有这样的解释：</p>
<p>最近也发现很多接入交换机出现类似的情况，因为接入交换机端口所属VLAN在核心交换机上也有，最终竟然导致接入交换机和汇聚交换机、核心交换机间的链路阻塞，使得网络变得基本不通。<br>初步分析了一下捕获到的数据，基本认定原因在于好多个人计算机内包含恶意/流氓软件，会不停地访问btamail.net、bar.baidu.com、 sobar.baidu.com等域名，同时，windows的名字解析机制的顺序是：</p>
<ol>
<li>hosts</li>
<li>net bios, wins, lmhosts</li>
<li>dns<br>所以，就会在网络中产生大量nbns的数据包</li>
</ol>
<p>然后，在那台电脑上杀进程，找到恶意软件。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>办公室有台电脑，经常导致办公室网络中断。使用抓包工具分析，该电脑在网络组始终在使用Netbois协议进行域名查询，导致网络阻塞。</p>
<p>在网上有这样的解释：</p>
<p>最近也发现很多接入交换机出现类似的情况，因为接入交换机端口所属VLAN在核心交换机上也有，最终]]>
    </summary>
    
      <category term="网络" scheme="http://www.mr-wang.cn/tags/%E7%BD%91%E7%BB%9C/"/>
    
      <category term="技术" scheme="http://www.mr-wang.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[Nginx下dedecms安全设置]]></title>
    <link href="http://www.mr-wang.cn/2015/07/11/dedecms-security-settings-on-Nginx/"/>
    <id>http://www.mr-wang.cn/2015/07/11/dedecms-security-settings-on-Nginx/</id>
    <published>2015-07-11T12:26:27.000Z</published>
    <updated>2015-10-15T12:56:58.910Z</updated>
    <content type="html"><![CDATA[<h2 id="目录权限设置">目录权限设置</h2><p>织梦可读写、不可执行权限，禁止运行php程序目录：</p>
<ul>
<li>templets</li>
<li>uploads</li>
<li>data</li>
<li>images</li>
<li>a</li>
</ul>
<p>具体目录，可以通过后台一键更新时，寻找需要写入权限的目录</p>
<p>思路：<br>web服务器(AMH)运行的用户应该是www，那么网站的所有者就应该不能设置为www，而应该设置为不同的用户，这里设置为ftpuser用户。同时www、ftpuser用户应该为同一组，这里设置同为www组。</p>
<a id="more"></a>
<p>1、那么我们将网站目录的所有者设置为ftpuser，用户组设置为www，目录权限设置为为750，文件权限设置为640。这里以AMH控制面板为例：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /home/wwwroot/$web_site&#10;chown -R ftpuser.www web&#10;find web -type d -exec chmod 750 &#123;&#125; \;&#10;find web -not -type d -exec chmod 640 &#123;&#125; \;</span><br></pre></td></tr></table></figure>
<p>2、针对需要有读写权限的目录，templets、uploads、data、images、a等</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd web&#10;chmod -R 770 templets uploads data images a</span><br></pre></td></tr></table></figure>
<h2 id="禁止执行PHP文件">禁止执行PHP文件</h2><p>针对有读写权限的目录，禁止运行PHP</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/nginx/conf/vhost/$web_site.conf&#10;#&#36861;&#21152;&#22914;&#19979;&#10;location ~* ^/(templets|uploads|data|images|a)/.*\.(php|php5)$&#10;&#123;&#10;&#9;deny all;&#10;&#125;</span><br></pre></td></tr></table></figure>
<h2 id="Shell增加变量">Shell增加变量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash&#10;#dede_safe.sh&#10;#$1&#25351;&#32593;&#31449;&#30446;&#24405;&#10;cd /home/wwwroot/$1&#10;chown -R ftpuser.www web&#10;find web -type d -exec chmod 750 &#123;&#125; \;&#10;find web -type f -exec chmod 640 &#123;&#125; \;&#10;&#10;#$2&#25351;&#26377;&#35835;&#20889;&#26435;&#38480;&#30340;&#30446;&#24405;&#21517;&#31216;&#65288;&#30446;&#24405;&#21517;&#31216;&#20043;&#38388;&#29992;&#31354;&#26684;&#38548;&#24320;&#65289;&#10;cd web&#10;chmod -R 770 $2&#10;&#10;#$3&#25351;&#26377;&#35835;&#20889;&#26435;&#38480;&#30340;&#30446;&#24405;&#21517;&#31216;&#65288;&#30446;&#24405;&#21517;&#31216;&#20043;&#38388;&#29992;|&#38548;&#24320;&#65289;&#10;cd /usr/local/nginx/conf/vhost/&#10;sed -i &#39;/php\$/i\\ \tlocation ~* ^/(&#39;&#34;$3&#34;&#39;)/.*\.(php|php5)$\n\t&#123;\n\t\tdeny all;\n\t&#125;\n&#39; &#34;$1&#34;.conf sed -i &#39;/php\$/i\\ \tlocation ~* ^/(&#39;&#34;$3&#34;&#39;)/.*\.(php|php5)$\n\t&#123;\n\t\tdeny all;\n\t&#125;\n&#39; &#34;$1&#34;.conf</span><br></pre></td></tr></table></figure>
<p>如何来调用：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">./dede_safe.sh &#34;www.wangyi.com&#34; &#34;templets uploads&#34; &#34;templets|uploads&#34;</span><br></pre></td></tr></table></figure>
<p>在sed中使用变量</p>
<p>通常，我们使用sed进行变量替换的时候，替换和被替换变量都是hard-coded的。例如：</p>
<p><code>sed -n ‘/comm/p’ /tmp/test.log</code></p>
<p>如果我们用一变量var，它的值根据上下文变化</p>
<p><code>$ var=”comm”</code>，定义了变量，那么我们在sed的使用中这样使用变量</p>
<p><code>$ sed -n ‘/’”$var”‘/p’ /tmp/test.log</code></p>
<p>注意，是用单引号包含双引号来引用变量。</p>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="目录权限设置">目录权限设置</h2><p>织梦可读写、不可执行权限，禁止运行php程序目录：</p>
<ul>
<li>templets</li>
<li>uploads</li>
<li>data</li>
<li>images</li>
<li>a</li>
</ul>
<p>具体目录，可以通过后台一键更新时，寻找需要写入权限的目录</p>
<p>思路：<br>web服务器(AMH)运行的用户应该是www，那么网站的所有者就应该不能设置为www，而应该设置为不同的用户，这里设置为ftpuser用户。同时www、ftpuser用户应该为同一组，这里设置同为www组。</p>]]>
    
    </summary>
    
      <category term="Nginx" scheme="http://www.mr-wang.cn/tags/Nginx/"/>
    
      <category term="技术" scheme="http://www.mr-wang.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[让AMH虚拟主机支持PATHINFO]]></title>
    <link href="http://www.mr-wang.cn/2015/07/11/Let-AMH-virtual-host-support-PATHINFO/"/>
    <id>http://www.mr-wang.cn/2015/07/11/Let-AMH-virtual-host-support-PATHINFO/</id>
    <published>2015-07-11T12:26:27.000Z</published>
    <updated>2015-10-15T12:56:13.419Z</updated>
    <content type="html"><![CDATA[<p>现在公司许多程序是在基于ThinkPHP框架上进行开发的， 然而基于此框架开发的程序，URL访问形式如下：</p>
<p><a href="http://it.ctwoo.com/index.php/Login/index" target="_blank" rel="external">http://it.ctwoo.com/index.php/Login/index</a></p>
<p>默认Nginx是不支持PATHINFO的。</p>
<p>AMH虚拟主机支持PATHINFO更改方法,更改需要支持PATHINFO的主机的配置文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/nginx/conf/vhost/domain.com.conf</span><br></pre></td></tr></table></figure>
<p>参考配置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location ~ ^(.+\.php)(.*)$&#10;&#123;&#10;    fastcgi_pass  unix:/tmp/php-cgi-e-uncommon.com.sock;&#10;    fastcgi_index index.php;&#10;    //begin&#10;    fastcgi_split_path_info ^(.+\.php)(.*)$;&#10;    fastcgi_param PATH_INFO $fastcgi_path_info;&#10;    //end&#10;    include fcgi-host.conf;&#10;&#125;</span><br></pre></td></tr></table></figure>
<p>Esc :wq 保存退出。</p>
<p>进入AMH后台重启Nginx即可。</p>
<a id="more"></a>
<p>2014年10月30日补充：<br>问题1：thinkphp在nginx环境下，不支持pathinfo。</p>
<p>pathinfo模式，举个例子：</p>
<p><a href="http://www.geekpark.net/read/view/171078" target="_blank" rel="external">http://www.geekpark.net/read/view/171078</a></p>
<p>首先会访问到 www.geekpark.net/index.php文件</p>
<p>然后 通过php文件get到参数 就会获取到 read/view/171078</p>
<p>通过拆分成数组就是</p>
<p>array(0=&gt;’read’,1=&gt;’view’,2=&gt;171078)</p>
<p>那么系统就会去 include read.php 然后在实例化 read</p>
<p>然后访问read对象内的 view方法</p>
<p>然后 view方法 get到171078这条参数进行数据库查询…..</p>
<p>很简单的理解为</p>
<p>read /view/ 171078</p>
<p>控制器 方法 参数</p>
<p>而thinkphp支持4种模式，将官网的讲解粘贴如下：</p>
<hr>
<p>一、普通模式：设置URL_MODEL 为0</p>
<p>采用传统的URL参数模式</p>
<p><a href="http://serverName/appName/?m=module&amp;a=action&amp;id=1" target="_blank" rel="external">http://serverName/appName/?m=module&amp;a=action&amp;id=1</a></p>
<p>二、PATHINFO模式（默认模式）：设置URL_MODEL 为1</p>
<p>默认情况使用PATHINFO模式，ThinkPHP内置强大的PATHINFO支持，提供灵活和友好URL支持。PATHINFO模式自动识别模块和操作，例如</p>
<p><a href="http://serverName/appName/module/action/id/1/" target="_blank" rel="external">http://serverName/appName/module/action/id/1/</a></p>
<p>或者</p>
<p><a href="http://serverName/appName/module,action,id,1/" target="_blank" rel="external">http://serverName/appName/module,action,id,1/</a></p>
<p>在不考虑路由的情况下，第一个参数会被解析成模块名称（如果启用了分组的话，则依次往后递推），第二个参数会被解析成操作，后面的参数是显式传递的，而且必须成对出现，例如：</p>
<p><a href="http://serverName/appName/module/action/year/2008/month/09/day/21/" target="_blank" rel="external">http://serverName/appName/module/action/year/2008/month/09/day/21/</a></p>
<p>其中参数之间的分割符号由URL_PATHINFO_DEPR参数设置，默认为”/”，例如我们设置URL_PATHINFO_DEPR为“-”的话，就可以使用下面的URL访问</p>
<p><a href="http://serverName/appName/module-action-id-1/" target="_blank" rel="external">http://serverName/appName/module-action-id-1/</a></p>
<p>注意不要使用”:” 和”&amp;”符号进行分割，该符号有特殊用途。</p>
<p>略加修改，就可以展示出富有诗意的URL，呵呵～</p>
<p>如果想要简化URL的形式可以通过路由功能（后面会有描述）以及空模块和空操作。</p>
<p>在PATH_INFO模式下面，会把相关参数转换成GET变量，以及并入REQUEST变量，因此不妨碍URL里面的GET和REQUEST变量获取。</p>
<p>三、REWRITE模式： 设置URL_MODEL 为2</p>
<p>该URL模式和PATHINFO模式功能一样，除了可以不需要在URL里面写入口文件，和可以定义.htaccess<br>文件外。在开启了Apache的URL_REWRITE模块后，就可以启用REWRITE模式了，具体参考下面的URL重写部分。</p>
<p>四、兼容模式： 设置URL_MODEL 为3</p>
<p>兼容模式是普通模式和PATHINFO模式的结合，并且可以让应用在需要的时候直接切换到PATHINFO模式而不需要更改模板和程序，还可以和URL_WRITE模式整合。兼容模式URL可以支持任何的运行环境。</p>
<p>兼容模式的效果是：</p>
<p><a href="http://serverName/appName/?s=/module/action/id/1/" target="_blank" rel="external">http://serverName/appName/?s=/module/action/id/1/</a></p>
<p>并且也可以支持参数分割符号的定义，例如在URL_PATHINFO_DEPR为~的情况下，下面的URL有效：</p>
<p><a href="http://serverName/appName/?s=module~action~id~1" target="_blank" rel="external">http://serverName/appName/?s=module~action~id~1</a></p>
<p>其实是利用了VAR_PATHINFO参数，用普通模式的实现模拟了PATHINFO的模式。但是兼容模式并不需要自己传s变量，而是由系统自动完成URL部分。正是由于这个特性，兼容模式可以和PATHINFO模式之间直接切换，而不需更改模板文件里面的URL地址连接。</p>
<p>某些服务器环境不能良好的支持PATHINFO，但是在大多数环境下面ThinkPHP可以进行兼容判断，如果你的服务器环境或者空间仍然无法识别PAHTINFO的话，或者需要自己增加识别方法或者可以选择普通模式或者兼容模式URL运行。</p>
<hr>
<p>前面AMH（nginx环境)支持pathinfo相关设置有讲到</p>
<p>实际使用发现新版的thinkphp设置后，不能成功。</p>
<p>后来尝试，使用如下方法解决：</p>
<p>1、将thinkphp模式设置为rewrite模式；</p>
<p>2、在AMH下，通过AMRewrite模块，新建一个rewrite规则，内容如下：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location / &#123;&#10;if (!-e $request_filename) &#123;&#10;rewrite ^(.*)$ /index.php?s=$1 last;&#10;break;&#10;&#125;&#10;&#125;&#10;location /Apps/crm7/ &#123;&#10;if (!-e $request_filename) &#123;&#10;rewrite ^/Apps/crm7/(.*)$ /Apps/crm7/index.php?s=$1 last;&#10;break;&#10;&#125;&#10;&#125;&#10;location /Apps/zhiansys/ &#123;&#10;if (!-e $request_filename) &#123;&#10;rewrite ^/Apps/zhiansys/(.*)$ /Apps/zhiansys/index.php?s=$1 last;&#10;break;&#10;&#125;&#10;&#125;&#10;location /Apps/it/ &#123;&#10;if (!-e $request_filename) &#123;&#10;rewrite ^/Apps/it/(.*)$ /Apps/it/index.php?s=$1 last;&#10;break;&#10;&#125;&#10;&#125;</span><br></pre></td></tr></table></figure>
<p>3、将规则应用到对应网址，重启nginx。</p>
<p>问题2：AMH环境下访问sqlserver数据库，返回数据编码有误，导致返回数据均为问号</p>
<p>首先，AMH环境下安装mssql模块：</p>
<p>1、安装freetds</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /usr/local/&#10;wget http://mirrors.xmu.edu.cn/ubuntu/archive/pool/main/f/freetds/freetds_0.82.orig.tar.gz&#10;tar zxf freetds_0.82.orig.tar.gz&#10;cd freetds-0.82&#10;./configure &#8211;prefix=/usr/local/freetds &#8211;with-tdsver=8.0 &#8211;enable-msdblib &#8211;enable-dbmfix &#8211;with-gnu-ld &#8211;enable-shared &#8211;enable-static&#10;make &#38;&#38; make install</span><br></pre></td></tr></table></figure>
<p>2、下载php源码，安装mssql模块</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd php-5.3.27/ext/mssql&#10;/usr/local/php/bin/phpize;&#10;./configure &#8211;with-php-config=/usr/local/php/bin/php-config  &#8211;with-mssql=/usr/local/freetds&#10;make &#38;&#38; make install&#10;vi /etc/php.ini&#10;extension = /usr/local/php/lib/php/extensions/no-debug-non-zts-20090626/mssql.so</span><br></pre></td></tr></table></figure>
<p>3、重启面板php、虚拟主机php</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">amh php restart amh-web y&#10;amh php restart</span><br></pre></td></tr></table></figure>
<p>其次，修改php.ini</p>
<p>添加mssql.charset = “UTF8″</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>现在公司许多程序是在基于ThinkPHP框架上进行开发的， 然而基于此框架开发的程序，URL访问形式如下：</p>
<p><a href="http://it.ctwoo.com/index.php/Login/index">http://it.ctwoo.com/index.php/Login/index</a></p>
<p>默认Nginx是不支持PATHINFO的。</p>
<p>AMH虚拟主机支持PATHINFO更改方法,更改需要支持PATHINFO的主机的配置文件：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/local/nginx/conf/vhost/domain.com.conf</span><br></pre></td></tr></table></figure>
<p>参考配置：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">location ~ ^(.+\.php)(.*)$&#10;&#123;&#10;    fastcgi_pass  unix:/tmp/php-cgi-e-uncommon.com.sock;&#10;    fastcgi_index index.php;&#10;    //begin&#10;    fastcgi_split_path_info ^(.+\.php)(.*)$;&#10;    fastcgi_param PATH_INFO $fastcgi_path_info;&#10;    //end&#10;    include fcgi-host.conf;&#10;&#125;</span><br></pre></td></tr></table></figure>
<p>Esc :wq 保存退出。</p>
<p>进入AMH后台重启Nginx即可。</p>]]>
    
    </summary>
    
      <category term="Nginx" scheme="http://www.mr-wang.cn/tags/Nginx/"/>
    
      <category term="技术" scheme="http://www.mr-wang.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[2013年版通达OA与飞信集成]]></title>
    <link href="http://www.mr-wang.cn/2015/07/11/The-tongda-of-OA-with-Fetion-integrated-access/"/>
    <id>http://www.mr-wang.cn/2015/07/11/The-tongda-of-OA-with-Fetion-integrated-access/</id>
    <published>2015-07-11T12:26:27.000Z</published>
    <updated>2015-10-15T12:59:07.213Z</updated>
    <content type="html"><![CDATA[<p>基于PHP-fetion进行修改。</p>
<p>作者博客：<a href="http://blog.quanhz.com/" target="_blank" rel="external">http://blog.quanhz.com/</a></p>
<p>PHP-fetion代码：<a href="https://code.google.com/p/php-fetion/" target="_blank" rel="external">https://code.google.com/p/php-fetion/</a></p>
<p>对定时发送页面做了修改：</p>
<p>fetion_send_sms.php(2013年版通达OA)</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;?</span><br><span class="line">//定时任务发送飞信手机短信</span><br><span class="line">    include_once (“inc/conn.php”);</span><br><span class="line">    include_once (“inc/fetion.php”); //账号密码</span><br><span class="line">    require_once (“inc/class.fetion.php”); //飞信发送类</span><br><span class="line">    require_once (“inc/class.gateway.php”); //其他API接口发送</span><br><span class="line">    $cur_time = date(“Y-m-d H:i:s”); //获得当前时间</span><br><span class="line">    $query = “SELECT `SMS_ID`,`PHONE`,`CONTENT` FROM `SMS2` WHERE `SEND_TIME` &lt;= ‘&#123;$cur_time&#125;’ AND `SEND_FLAG` = ‘3’ LIMIT 1″; //检测短信时间及状态</span><br><span class="line">    $cursor = exequery($connection, $query); //连接数据库</span><br><span class="line">    //无短信需要发送</span><br><span class="line">    if (0 == mysql_num_rows($cursor)) &#123;</span><br><span class="line">        echo “No message to send”;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">    //发送飞信</span><br><span class="line">    $ROW = mysql_fetch_array($cursor);</span><br><span class="line">    $PHONE = $ROW['PHONE'];</span><br><span class="line">    $CONTENT = $ROW['CONTENT'];</span><br><span class="line">    $SMS_ID = $ROW['SMS_ID'];</span><br><span class="line">    //登陆飞信</span><br><span class="line">    $fetion = new PHPFetion($mobile, $password);</span><br><span class="line">    //发送飞信短信</span><br><span class="line">    $result = $fetion-&gt;send($PHONE, iconv(“gbk”, “utf-8″, $CONTENT));</span><br><span class="line">    //发送短信读取手机号，及信息内容转换代码</span><br><span class="line">    $result = iconv(“utf-8″, “gbk”, $result); //返回值</span><br><span class="line">    //判定飞信发送是否成功</span><br><span class="line">    if (strpos($result, “成功”) === FALSE) &#123;</span><br><span class="line">        $JIEGUO = 0; //失败，状态更新至待网关发送</span><br><span class="line">        echo “One message to sent by MAS”;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $JIEGUO = 1; //成功</span><br><span class="line">        echo “One message to sent by Fetion”;</span><br><span class="line">    &#125;</span><br><span class="line">    //更新短信发送状态</span><br><span class="line">    $query2 = “UPDATE `SMS2` SET `SEND_FLAG` = ‘&#123;$JIEGUO&#125;’ WHERE `SMS_ID`='&#123;$SMS_ID&#125;'”;</span><br><span class="line">    exequery($connection, $query2);</span><br><span class="line">    //结束会话</span><br><span class="line">    $fetion-&gt;_logout();</span><br><span class="line">    &#125;</span><br><span class="line">    /* End of the file */</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<p>其余代码，点击下载：<a href="http://mr-wang.qiniudn.com/2013%E5%B9%B4%E7%89%88OA%E4%B8%8E%E9%A3%9E%E4%BF%A1%E9%9B%86%E6%88%90%E6%96%B9%E6%A1%88.zip" target="_blank" rel="external">2013年版OA与飞信集成方案</a></p>
<p>将文件在OA服务器wwwroot目录下进行覆盖，将task目录下的fetion_send_sms.php加入到通达OA的定时任务中。</p>
<p>注：OA自带的定时任务的最小时间间隔为1分钟，飞信发送缓慢。</p>
<p>这里提供2种解决方案：</p>
<p>1、windows下</p>
<p>创建一个cron.bat的批处理文件并用记事本打开输入：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@echo off&#10;:fetion&#10;ping -n 2 127.0.0.1 &#62;&#62;nul&#10;start http://188.188.0.9/fetion_send_sms.php&#10;ping -n 3 127.0.0.1 &#62;&#62;nul&#10;taskkill /f /im &#34;iexplore.exe&#34;&#10;goto fetion&#10;pause</span><br></pre></td></tr></table></figure>
<p>2.linux下</p>
<p>在/root/shell下创建一个fetion.sh的shell脚本</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh&#10;curl http://188.188.0.9/fetion_send_sms.php&#10;#&#23616;&#22495;&#32593;&#35775;&#38382;php&#20195;&#30721;&#30340;&#22320;&#22336;</span><br></pre></td></tr></table></figure>
<p>然后，每隔5s钟访问指定php脚本。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crontab -e&#10;* * * * * /root/shell/fetion.sh&#10;* * * * * sleep 5 &#38;amp;&#38;amp; /root/shell/fetion.sh&#10;* * * * * sleep 10 &#38;amp;&#38;amp; /root/shell/fetion.sh&#10;* * * * * sleep 15 &#38;amp;&#38;amp; /root/shell/fetion.sh&#10;* * * * * sleep 20 &#38;amp;&#38;amp; /root/shell/fetion.sh&#10;* * * * * sleep 25 &#38;amp;&#38;amp; /root/shell/fetion.sh&#10;* * * * * sleep 30 &#38;amp;&#38;amp; /root/shell/fetion.sh&#10;* * * * * sleep 35 &#38;amp;&#38;amp; /root/shell/fetion.sh&#10;* * * * * sleep 40 &#38;amp;&#38;amp; /root/shell/fetion.sh&#10;* * * * * sleep 45 &#38;amp;&#38;amp; /root/shell/fetion.sh&#10;* * * * * sleep 50 &#38;amp;&#38;amp; /root/shell/fetion.sh&#10;* * * * * sleep 55 &#38;amp;&#38;amp; /root/shell/fetion.sh</span><br></pre></td></tr></table></figure>
<p>2014.5.18日，更新统计飞信、mas发送次数，删除root邮件。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh&#10;Fetion_DateName=Fetion_Date_$(date +&#8220;%Y%m%d&#8221;).txt&#10;MAS_DateName=MAS_Date_$(date +&#8220;%Y%m%d&#8221;).txt&#10;grep &#8216;One message to sent by Fetion&#8217; /var/spool/mail/root | wc -l &#62;&#62; /root/shell/Date_Fetion/$Fetion_DateName&#10;grep &#8216;One message to sent by MAS&#8217; /var/spool/mail/root | wc -l &#62;&#62; /root/shell/Date_Fetion/$MAS_DateName&#10;cat /dev/null &#62; /var/spool/mail/root</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<p>基于PHP-fetion进行修改。</p>
<p>作者博客：<a href="http://blog.quanhz.com/">http://blog.quanhz.com/</a></p>
<p>PHP-fetion代码：<a href="https://code.google.com/p/php-fetion/">https://code.google.com/p/php-fetion/</a></p>
<p>对定时发送页面做了修改：</p>
<p>fetion_send_sms.php(2013年版通达OA)</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">&lt;?</span><br><span class="line">//定时任务发送飞信手机短信</span><br><span class="line">    include_once (“inc/conn.php”);</span><br><span class="line">    include_once (“inc/fetion.php”); //账号密码</span><br><span class="line">    require_once (“inc/class.fetion.php”); //飞信发送类</span><br><span class="line">    require_once (“inc/class.gateway.php”); //其他API接口发送</span><br><span class="line">    $cur_time = date(“Y-m-d H:i:s”); //获得当前时间</span><br><span class="line">    $query = “SELECT `SMS_ID`,`PHONE`,`CONTENT` FROM `SMS2` WHERE `SEND_TIME` &lt;= ‘&#123;$cur_time&#125;’ AND `SEND_FLAG` = ‘3’ LIMIT 1″; //检测短信时间及状态</span><br><span class="line">    $cursor = exequery($connection, $query); //连接数据库</span><br><span class="line">    //无短信需要发送</span><br><span class="line">    if (0 == mysql_num_rows($cursor)) &#123;</span><br><span class="line">        echo “No message to send”;</span><br><span class="line">    &#125;</span><br><span class="line">    else &#123;</span><br><span class="line">    //发送飞信</span><br><span class="line">    $ROW = mysql_fetch_array($cursor);</span><br><span class="line">    $PHONE = $ROW['PHONE'];</span><br><span class="line">    $CONTENT = $ROW['CONTENT'];</span><br><span class="line">    $SMS_ID = $ROW['SMS_ID'];</span><br><span class="line">    //登陆飞信</span><br><span class="line">    $fetion = new PHPFetion($mobile, $password);</span><br><span class="line">    //发送飞信短信</span><br><span class="line">    $result = $fetion-&gt;send($PHONE, iconv(“gbk”, “utf-8″, $CONTENT));</span><br><span class="line">    //发送短信读取手机号，及信息内容转换代码</span><br><span class="line">    $result = iconv(“utf-8″, “gbk”, $result); //返回值</span><br><span class="line">    //判定飞信发送是否成功</span><br><span class="line">    if (strpos($result, “成功”) === FALSE) &#123;</span><br><span class="line">        $JIEGUO = 0; //失败，状态更新至待网关发送</span><br><span class="line">        echo “One message to sent by MAS”;</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">        $JIEGUO = 1; //成功</span><br><span class="line">        echo “One message to sent by Fetion”;</span><br><span class="line">    &#125;</span><br><span class="line">    //更新短信发送状态</span><br><span class="line">    $query2 = “UPDATE `SMS2` SET `SEND_FLAG` = ‘&#123;$JIEGUO&#125;’ WHERE `SMS_ID`='&#123;$SMS_ID&#125;'”;</span><br><span class="line">    exequery($connection, $query2);</span><br><span class="line">    //结束会话</span><br><span class="line">    $fetion-&gt;_logout();</span><br><span class="line">    &#125;</span><br><span class="line">    /* End of the file */</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="通达OA" scheme="http://www.mr-wang.cn/tags/%E9%80%9A%E8%BE%BEOA/"/>
    
      <category term="技术" scheme="http://www.mr-wang.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[记网站服务器遭遇PHPDDOS攻击]]></title>
    <link href="http://www.mr-wang.cn/2015/07/11/The-web-server-encountered-PHPDDOS/"/>
    <id>http://www.mr-wang.cn/2015/07/11/The-web-server-encountered-PHPDDOS/</id>
    <published>2015-07-11T12:26:27.000Z</published>
    <updated>2015-10-15T12:59:16.969Z</updated>
    <content type="html"><![CDATA[<p>2014年4月10–11日，公司web服务器遭遇PHPDDOS攻击，导致服务器宽带被大量占用，网络延迟很大，无法远程登陆服务器管理。</p>
<p>开始以为是访问量太大导致的，10日发现服务器始终向某一固定IP发送UDP 53的包。采用iptables禁用IP。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I OUTPUT -s 119.42.149.69 -j DROP</span><br></pre></td></tr></table></figure>
<p>然而服务器故障依旧，后来查询资料，发现原来服务器web网站被挂马，PHPDDOS。</p>
<a id="more"></a>
<p>现分享解决方法：</p>
<p>1.在linux服务器中输入如下命令：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I OUTPUT -p udp &#8211;-dport 53 -d 202.103.44.150 -j ACCEPT&#10;iptables -I OUTPUT -p udp &#8211;-dport 53 -d 202.103.24.68 -j ACCEPT&#10;iptables -A OUTPUT -p udp -j REJECT&#10;/etc/rc.d/init.d/iptables save&#10;service iptables restart</span><br></pre></td></tr></table></figure>
<p>暂时通过iptables来屏蔽服务器向外发包。</p>
<p>2.查看网站日志，在日志中搜索IP：</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep  &#8216;119.42.149.69&#8217;  /usr/local/nginx/logs/access.log</span><br></pre></td></tr></table></figure>
<p>寻找服务器中的攻击文件，删除。</p>
]]></content>
    <summary type="html">
    <![CDATA[<p>2014年4月10–11日，公司web服务器遭遇PHPDDOS攻击，导致服务器宽带被大量占用，网络延迟很大，无法远程登陆服务器管理。</p>
<p>开始以为是访问量太大导致的，10日发现服务器始终向某一固定IP发送UDP 53的包。采用iptables禁用IP。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">iptables -I OUTPUT -s 119.42.149.69 -j DROP</span><br></pre></td></tr></table></figure>
<p>然而服务器故障依旧，后来查询资料，发现原来服务器web网站被挂马，PHPDDOS。</p>]]>
    
    </summary>
    
      <category term="Iptables" scheme="http://www.mr-wang.cn/tags/Iptables/"/>
    
      <category term="技术" scheme="http://www.mr-wang.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title><![CDATA[CentOS 安装与调优配置]]></title>
    <link href="http://www.mr-wang.cn/2015/07/11/CentOS-System-Performance-tuning/"/>
    <id>http://www.mr-wang.cn/2015/07/11/CentOS-System-Performance-tuning/</id>
    <published>2015-07-11T05:24:49.220Z</published>
    <updated>2015-04-06T02:57:53.000Z</updated>
    <content type="html"><![CDATA[<h2 id="分区">分区</h2><p>至少2个分区，/以及swap分区。另外设置独立/boot分区。<br>所以生产环境分3个分区。</p>
<p>分区案例：<a href="http://oldboy.blog.51cto.com/2561410/634725" target="_blank" rel="external">http://oldboy.blog.51cto.com/2561410/634725</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#&#20998;&#21306;&#26597;&#30475;&#10;df -Th&#10;&#10;Filesystem     Type   Size  Used Avail Use% Mounted on&#10;/dev/sda2      ext4   8.6G  2.5G  5.7G  31% /&#10;tmpfs          tmpfs  242M     0  242M   0% /dev/shm&#10;/dev/sda1      ext4   190M   53M  128M  30% /boot</span><br></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="挂载新硬盘">挂载新硬盘</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># &#26597;&#30475;&#26032;&#21152;&#30828;&#30424;&#30340;&#25991;&#20214;&#21517;&#10;fdisk -l&#10;&#10;# &#23545;&#26032;&#30828;&#30424;&#36827;&#34892;&#20998;&#21306;&#10;fdisk /dev/sdb&#10;&#10;# &#26597;&#30475;&#20998;&#21306;&#30340;&#26684;&#24335;&#31867;&#22411;&#10;df -Th&#10;&#10;# &#23545;&#26032;&#20998;&#21306;&#36827;&#34892;&#26684;&#24335;&#21270;&#10;mkfs -t ext4 /dev/sdb1&#10;&#10;# &#26032;&#24314;&#30446;&#24405;&#65292;&#24182;&#23558;&#20998;&#21306;&#25346;&#36733;&#21040;&#30446;&#24405;&#19979;&#10;mkdir /data&#10;mount /dev/sdb1 /data&#10;&#10;# &#20462;&#25913;/etc/fstab&#25991;&#20214;&#65292;&#35753;&#24320;&#26426;&#33258;&#21160;&#25346;&#36733;&#10;/dev/sdb1   /data   ext4   defaults    1 2</span><br></pre></td></tr></table></figure>
<h2 id="IP地址，DNS设置">IP地址，DNS设置</h2><h3 id="ip地址">ip地址</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-eth0&#10;&#10;DEVICE=eth0&#10;IPADDR=192.168.1.250&#10;NETMASK=255.255.255.0&#10;GATEWAY=192.168.1.1&#10;HWADDR=00:0C:29:F2:14:C7&#10;TYPE=Ethernet&#10;UUID=640ec151-26d6-4966-beb4-6de0c2306beb&#10;ONBOOT=yes&#10;NM_CONTROLLED=yes&#10;BOOTPROTO=static</span><br></pre></td></tr></table></figure>
<h3 id="DNS设置">DNS设置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/resolv.conf&#10;&#10;nameserver 114.114.114.114</span><br></pre></td></tr></table></figure>
<h2 id="yum源修改">yum源修改</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/yum.repos.d&#10;mv CentOS-Base.repo CentOS-Base.repo.bk &#10;wget http://mirrors.aliyun.com/repo/Centos-6.repo&#10;mv Centos-6.repo CentOS-Base.repo&#10;yum makecache&#10;&#10;#&#26356;&#26032;&#31995;&#32479;&#10;yum update&#10;&#10;#&#23433;&#35013;lrzsz&#19978;&#20256;&#19979;&#36733;&#24037;&#20855;&#10;yum install lrzsz</span><br></pre></td></tr></table></figure>
<h2 id="开机启动项优化">开机启动项优化</h2><p>1、图形界面禁止或启动服务<br>使用<code>setup</code>或者<code>ntsysv</code>命令</p>
<p>2、脚本实现禁止或启动服务</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#&#31105;&#27490;&#20840;&#37096;&#26381;&#21153;&#10;for service in `chkconfig --list | grep 3:&#21551;&#29992; | awk &#39;&#123;print $1&#125;&#39;`;do chkconfig --level 3 $service off;done&#10;&#10;#&#21551;&#29992;&#38656;&#35201;&#29992;&#21040;&#30340;&#26381;&#21153;&#10;for service in crond network sysstat sshd iptables;do chkconfig --level 3 $service on;done</span><br></pre></td></tr></table></figure>
<h2 id="SSH登陆设置">SSH登陆设置</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp /etc/ssh/sshd_config /etc/ssh/sshd_config.bk&#10;vi /etc/ssh/sshd_config &#10;&#10;###By Mr-wang 2015-03-20###&#10;    Port 22&#10;    PermitRootLogin no&#10;    PermitEmptyPasswords no&#10;    UseDNS no&#10;###By Mr-wang 2015-03-20###</span><br></pre></td></tr></table></figure>
<p>sshd_config 中文手册：<a href="http://www.jinbuguo.com/openssh/sshd_config.html" target="_blank" rel="external">http://www.jinbuguo.com/openssh/sshd_config.html</a></p>
<h2 id="修改中文显示">修改中文显示</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#39;LANG=&#34;zh_CN.UTF-8&#34;&#39; &#62; /etc/sysconfig/i18n</span><br></pre></td></tr></table></figure>
<p>注：&gt; 代表重写入   &gt;&gt; 代表追加</p>
<h2 id="服务器时间同步">服务器时间同步</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo &#39;0 0 */1 * * /usr/sbin/ntpdate 210.72.145.44 &#62; /dev/null 2&#62;&#38;1&#39; &#62;&#62; /var/spool/cron/root</span><br></pre></td></tr></table></figure>
]]></content>
    <summary type="html">
    <![CDATA[<h2 id="分区">分区</h2><p>至少2个分区，/以及swap分区。另外设置独立/boot分区。<br>所以生产环境分3个分区。</p>
<p>分区案例：<a href="http://oldboy.blog.51cto.com/2561410/634725">http://oldboy.blog.51cto.com/2561410/634725</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">#&#20998;&#21306;&#26597;&#30475;&#10;df -Th&#10;&#10;Filesystem     Type   Size  Used Avail Use% Mounted on&#10;/dev/sda2      ext4   8.6G  2.5G  5.7G  31% /&#10;tmpfs          tmpfs  242M     0  242M   0% /dev/shm&#10;/dev/sda1      ext4   190M   53M  128M  30% /boot</span><br></pre></td></tr></table></figure>]]>
    
    </summary>
    
      <category term="Linux" scheme="http://www.mr-wang.cn/tags/Linux/"/>
    
      <category term="技术" scheme="http://www.mr-wang.cn/categories/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
</feed>